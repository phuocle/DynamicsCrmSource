<public:component lightweight="true">
<public:attach event="ondocumentready" onevent="init()"/>
<public:attach event="oncontextmenu" onevent="handleContextMenu()"/>
<public:attach event="onkeyup" onevent="handleKeyUp()"/>
<public:attach event="onkeydown" onevent="handleKeyDown()"/>
<public:attach event="onmouseover" onevent="renderToolTip()"/>
<public:attach event="ondblclick" onevent="handleDblClick()"/>
<public:attach event="onclick" onevent="handleClick()"/>
<public:method name="SelectRecords"/>
<public:method name="UnselectRecords"/>
<public:method name="ResizeColumn"/>
<public:method name="AutoResizeColumn"/>
<public:method name="SendShortcut"/>
<public:method name="PrintRow"/>
<public:method name="PreviewRow"/>
<public:method name="SaveSelectRows"/>
<public:method name="ReSelectRows"/>
<public:method name="OpenInNewWindow"/>
<public:method name="OpenGridInNewWindow"/>
<public:method name="FindColumnIndex"/>
<public:method name="HandlePrimaryFieldClick"/>
<public:property name="PrimaryFieldColumnIndex" get="getPrimaryFieldColumnIndex"/>
<public:property name="NumberOfRecords" get="getNumberOfRecords"/>
<public:property name="SelectedRecords" get="getSelectedRecords"/>
<public:property name="AllRecords" get="getAllRecords"/>
<public:property name="MoreRecords" get="getMoreRecords"/>
<public:property name="TotalRecordCount" get="getTotalRecordCount"/>
<public:property name="AllRecordsCounted" get="areAllRecordsCounted"/>
<public:property name="PrimaryFieldName" get="getPrimaryFieldName"/>
<public:property name="PrimaryFieldLabel" get="getPrimaryFieldLabel"/>
<public:property name="ContextMenuRow" get="getContextMenuRow"/>
<public:property name="DefaultRowHeight" get="getDefaultRowHeight"/>
<public:property name="ScrollBarSize" get="getScrollBarSize"/>
<public:property name="ParentGridControl"/>
<public:property name="ParentGridControlDataArea"/>
<public:property name="DataTableBody" get="getDataTableBody"/>
<public:event name="onselectionchange" id="OnSelectionChange"/>
<public:event name="onbeforeformload" id="OnBeforeFormLoad"/>
<script language="JavaScript"></script><script type="text/javascript">

                                           var _iTotalRecords = 0,
                                               _iTotalSelected = 0,
                                               _iLastPickedIndex = -1,
                                               _menuLastPickedIndex = null,
                                               _oEnhancedPreview,
                                               _oPop,
                                               _o,
                                               _iPopX,
                                               _iPopY,
                                               _iPopH,
                                               _iPopW,
                                               _oXslProc,
                                               _iClickTimer,
                                               _oPreviewed,
                                               _oPreviewXml,
                                               _aSelectedRows = [],
                                               _iDefaultRowHeight = 21,
                                               _iScrollBarSize = 0,
                                               _aSavedSelectedRows = [],
                                               _iRetryRenderGridAttempts = 0,
                                               KEY_SELECTALL,
                                               appGridKeyLeft,
                                               appGridKeyRight;
                                           if (window.document.media != "print")
                                               if (LOCID_UI_DIR == "RTL") {
                                                   appGridKeyLeft = KEY_RIGHT;
                                                   appGridKeyRight = KEY_LEFT
                                               } else {
                                                   appGridKeyLeft = KEY_LEFT;
                                                   appGridKeyRight = KEY_RIGHT
                                               }

                                           function PrintRow(oRow) {
                                               if (!IsNull(oRow)) {
                                                   var oUrl = Mscrm.CrmUri.create("/_forms/print/print.aspx");
                                                   oUrl.get_query()["objectType"] = element.oname;
                                                   oUrl.get_query()["id"] = oRow.oid;
                                                   oUrl.get_query()["subType"] = oRow.otype;
                                                   openStdWin(oUrl, "print" + buildWinName(oRow.oid))
                                               }
                                           }

                                           function PreviewRow(oRow) {
                                               if (IsNull(oRow) || IsNull(oRow.otype) || IsNull(oRow.oid))
                                                   return;
                                               if (oRow.otype == 9100) {
                                                   expandRow(oRow);
                                                   return
                                               }
                                               return;
                                               if (IsNull(_oEnhancedPreview)) {
                                                   _oEnhancedPreview = new Mscrm.EnhancedPreviewControl;
                                                   this.ParentGridControl.attachEvent("onRefresh", onParentGridRefresh)
                                               }
                                               var top = 0,
                                                   left = 0;
                                               if (_oPop != null && _oPop.isOpen) {
                                                   top = _iPopY;
                                                   left = _iPopX
                                               } else {
                                                   var refObj = oRow;
                                                   if (oRow.children.length > 2)
                                                       if (oRow.children[0].firstChild.id.indexOf("previewImage") != -1)
                                                           refObj = oRow.children[1];
                                                       else
                                                           refObj = oRow.children[2];
                                                   var xyPos = Mscrm.Utilities.getXYPos(refObj, LOCID_UI_DIR == "RTL");
                                                   top = xyPos["y"];
                                                   left = xyPos["x"];
                                                   var pElement = oRow.parentElement;
                                                   while (pElement != null &&
                                                       pElement.className != "ms-crm-List-DataArea" &&
                                                       pElement.className != "ms-crm-List-DataAreaEx")
                                                       pElement = pElement.parentElement;
                                                   if (pElement != null) {
                                                       left = left + pElement.scrollLeft;
                                                       if (LOCID_UI_DIR == "RTL")
                                                           left = left - (pElement.scrollWidth - pElement.offsetWidth)
                                                   }
                                               }
                                               var gridDataTable = oRow.parentNode.parentNode;
                                               _oEnhancedPreview.show(top, left, oRow.otype, oRow.oid, gridDataTable)
                                           }

                                           function onParentGridRefresh() {
                                               !IsNull(_oEnhancedPreview) &&
                                                   _oEnhancedPreview.hide()
                                           }

                                           function OpenInNewWindow(oRow) {
                                               if (Mscrm.NavigationMode.DefaultNavigationMode !=
                                                   Mscrm.NavigationMode.NavigationModeInline)
                                                   return;
                                               var gridControl = $find(this.ParentGridControl.id);
                                               if (IsNull(gridControl) ||
                                                   IsNull(Mscrm.PageManager) ||
                                                   IsNull(Mscrm.PageManager.get_instance()) ||
                                                   !Mscrm.PageManager.isFlatUIPage())
                                                   return;
                                               if (!Mscrm.PageManager.isFlatObject(parseInt(element.oname), 10)) {
                                                   openRecord(findTargetRow(oRow), 10);
                                                   return
                                               }
                                               var parameters = {};
                                               parameters["etc"] = element.oname;
                                               parameters["id"] = findTargetRow(oRow).oid;
                                               parameters["pagetype"] = "entityrecord";
                                               parameters["newWindow"] = true;
                                               parameters["queryString"] = getParentEntityIdParams();
                                               gridControl.raiseEvent(Mscrm.ScriptEvents.NavigateRequest, parameters)
                                           }

                                           function OpenGridInNewWindow() {
                                               if (Mscrm.NavigationMode.DefaultNavigationMode !=
                                                   Mscrm.NavigationMode.NavigationModeInline)
                                                   return;
                                               var gridControl = $find(this.ParentGridControl.id);
                                               if (IsNull(gridControl) ||
                                                   IsNull(Mscrm.PageManager) ||
                                                   IsNull(Mscrm.PageManager.get_instance()) ||
                                                   !Mscrm.PageManager.isFlatUIPage())
                                                   return;
                                               var parameters = {};
                                               parameters["etc"] = element.oname;
                                               parameters["viewid"] = GetParameter("viewid");
                                               parameters["pagetype"] = "entitylist";
                                               parameters["newWindow"] = true;
                                               gridControl.raiseEvent(Mscrm.ScriptEvents.NavigateRequest, parameters)
                                           }

                                           function SelectRecords(iStart, iStop, fUnselect) {
                                               var bResult;
                                               if (IsNull(iStart))
                                                   iStart = 0;
                                               if (IsNull(iStop))
                                                   iStop = DataTableBody.rows.length - 1;
                                               if (!IsNull(fUnselect) &&
                                                   fUnselect &&
                                                   iStop != DataTableBody.rows.length - 1)
                                                   for (var iLength = _aSelectedRows.length,
                                                       i = 0;
                                                       i < iLength;
                                                       i++) {
                                                       var oRow = _aSelectedRows[i];
                                                       if (!IsNull(oRow) &&
                                                       (
                                                           oRow
                                                               .sectionRowIndex <
                                                               iStart ||
                                                               oRow.sectionRowIndex > iStop)) {
                                                           unselectRow(oRow);
                                                           _aSelectedRows.splice(i, 1);
                                                           i--;
                                                           iLength--
                                                       }
                                                   }
                                               for (; iStart < iStop + 1; iStart++) {
                                                   collapseRow(DataTableBody.rows[iStart]);
                                                   bResult = selectRow(DataTableBody.rows[iStart]);
                                                   if (!bResult)
                                                       break
                                               }
                                               _iLastPickedIndex = iStop;
                                               raiseSelectionChangeEvent()
                                           }

                                           function UnselectRecords(oSkip) {
                                               var oTr = _aSelectedRows.pop();
                                               while (!IsNull(oTr)) {
                                                   collapseRow(oTr);
                                                   unselectRow(oTr);
                                                   oTr = _aSelectedRows.pop()
                                               }
                                               !IsNull(oSkip) &&
                                                   selectRow(oSkip);
                                               raiseSelectionChangeEvent()
                                           }

                                           function ResizeColumn(sColumnName, iWidth) {
                                               var i = FindColumnIndex(sColumnName);
                                               if (i > -1)
                                                   element.firstChild.children[i].width = iWidth + 3
                                           }

                                           function AutoResizeColumn(sColumnName) {
                                               var oRows = DataTableBody.rows,
                                                   iLen = oRows.length,
                                                   iIndex = FindColumnIndex(sColumnName),
                                                   iWidth = 0;
                                               if (iIndex < 0)
                                                   return -1;
                                               if (oRows[0].firstChild.className != "ms-crm-List-MessageText")
                                                   for (var i = 0; i < iLen; i++) {
                                                       var oTmp = oRows[i].cells[iIndex].firstChild,
                                                           sTmp = oTmp.innerHTML;
                                                       oTmp.innerHTML = "<span>" + oTmp.innerHTML + "</span>";
                                                       if (oTmp.firstChild.offsetWidth > iWidth)
                                                           iWidth = oTmp.firstChild.offsetWidth;
                                                       oTmp.innerHTML = sTmp
                                                   }
                                               return iWidth + 10
                                           }

                                           function init() {
                                               if (window.document.media != "print")
                                                   KEY_SELECTALL = LOCID_GRID_SELECT_ALL_KEY.charCodeAt(0);
                                               if (window.document.media != "print") {
                                                   raiseSelectionChangeEvent();
                                                   _iRetryRenderGridAttempts = 0;
                                                   initRender()
                                               }
                                           }

                                           function initRender() {
                                               if (typeof ParentGridControl != "undefined" &&
                                                   typeof ParentGridControl != "unknown" &&
                                                   !IsNull(ParentGridControl)) {
                                                   var iTotalRecords = getNumberOfRecords();
                                                   if (iTotalRecords > 0) {
                                                       if (SelectDefaultRecord()) {
                                                           SelectRecords(0, 0);
                                                           _iLastPickedIndex = 0
                                                       }
                                                   } else if (ParentGridControl.GetParameter("AutoRefreshOnLoad") == "1"
                                                   ) {
                                                       ParentGridControl.SetParameter("LoadOnDemand", "0");
                                                       ParentGridControl.SetParameter("AutoRefreshOnLoad", "0");
                                                       ParentGridControl.Refresh()
                                                   } else if (ParentGridControl.GetParameter("RenderAsync") == "1") {
                                                       ParentGridControl.SetParameter("RenderAsync", "0");
                                                       ParentGridControl.Refresh()
                                                   }
                                               } else if (_iRetryRenderGridAttempts < 5) {
                                                   setTimeout(initRender, 1e3);
                                                   _iRetryRenderGridAttempts++
                                               }
                                           }

                                           function SelectDefaultRecord() {
                                               var retVal = false,
                                                   selectDefault = ParentGridControl
                                                       .GetParameter("EnableFirstRecordSelection");
                                               if (!IsNull(selectDefault)) {
                                                   retVal = Boolean.parse(selectDefault);
                                                   if (retVal &&
                                                       ParentGridControl.GetParameter("GridType") == "SubGrid" &&
                                                       !ParentGridControl.HasFocus)
                                                       retVal = false
                                               }
                                               return retVal
                                           }

                                           function getRecords(bSelectedOnly) {
                                               for (var a = [],
                                                   iLen = DataTableBody.rows.length,
                                                   iArrayIndex = 0,
                                                   i = 0;
                                                   i < iLen;
                                                   i++) {
                                                   var oTr = DataTableBody.rows[i];
                                                   if (oTr.oid && (!bSelectedOnly || oTr.selected)) {
                                                       a[iArrayIndex] = [];
                                                       a[iArrayIndex][0] = oTr.oid;
                                                       a[iArrayIndex][3] = oTr;
                                                       if (oTr.otype) {
                                                           a[iArrayIndex][1] = oTr.otype;
                                                           a[iArrayIndex][3]["otype"] = oTr.otype
                                                       } else {
                                                           a[iArrayIndex][1] = element.oname;
                                                           a[iArrayIndex][3]["otype"] = element.oname
                                                       }
                                                       a[iArrayIndex][2] = i;
                                                       iArrayIndex++
                                                   }
                                               }
                                               return a
                                           }

                                           function getSelectedRecords() {
                                               return getRecords(true)
                                           }

                                           function getAllRecords() {
                                               return getRecords(false)
                                           }

                                           function getContextMenuRow() {
                                               return _o
                                           }

                                           function getMoreRecords() {
                                               return element.morerecords == "1"
                                           }

                                           function getTotalRecordCount() {
                                               var totalRecordCount = element.totalrecordcount;
                                               if (!IsNull(totalRecordCount))
                                                   return totalRecordCount;
                                               return "-1"
                                           }

                                           function areAllRecordsCounted() {
                                               return !(element.allrecordscounted === "0")
                                           }

                                           function getDataTableBody() {
                                               var dataTableBodyCollection = element.getElementsByTagName("tbody");
                                               if (!IsNull(dataTableBodyCollection))
                                                   return dataTableBodyCollection[0];
                                               return element
                                           }

                                           function raiseSelectionChangeEvent() {
                                               if (!IsNull(OnSelectionChange) && window.event != null) {
                                                   var oEvent = this.createEventObject();
                                                   OnSelectionChange.fire(oEvent);
                                                   return oEvent
                                               }
                                               return null
                                           }

                                           function getNumberOfRecords() {
                                               var numRecords = this.getAttribute("numRecords");
                                               if (numRecords) {
                                                   _iTotalRecords = numRecords;
                                                   return _iTotalRecords
                                               }
                                               if (_iTotalRecords === 0) {
                                                   for (var iTotal = 0,
                                                       iLen = this.rows.length,
                                                       i = 0;
                                                       i < iLen;
                                                       i++)
                                                       if (typeof this.rows[i].oid != "undefined")
                                                           iTotal++;
                                                   _iTotalRecords = iTotal
                                               }
                                               return _iTotalRecords
                                           }

                                           function getDefaultRowHeight() {
                                               return _iDefaultRowHeight
                                           }

                                           function getScrollBarSize() {
                                               if (_iScrollBarSize == 0) {
                                                   var outer = null,
                                                       inner = null,
                                                       iWidthNoScroll = 0,
                                                       iWidthScroll = 0;
                                                   outer = window.document.createElement("div");
                                                   inner = window.document.createElement("div");
                                                   outer.appendChild(inner);
                                                   window.document.body.appendChild(outer);
                                                   inner.style.width = "100%";
                                                   inner.style.height = "200px";
                                                   outer.style.position = "absolute";
                                                   outer.style.top = "-500px";
                                                   outer.style.left = "-500px";
                                                   outer.style.width = "100px";
                                                   outer.style.height = "50px";
                                                   outer.style.overflow = "hidden";
                                                   iWidthNoScroll = inner.offsetWidth;
                                                   outer.style.overflow = "scroll";
                                                   iWidthScroll = inner.offsetWidth;
                                                   inner.innerHTML = "";
                                                   outer.innerHTML = "";
                                                   window.document.body.removeChild(window.document.body.lastChild);
                                                   _iScrollBarSize = iWidthNoScroll - iWidthScroll
                                               }
                                               return _iScrollBarSize
                                           }

                                           function FindColumnIndex(sColumnName) {
                                               var i = 0,
                                                   iLen = element.firstChild.children.length,
                                                   iIndex = -1;
                                               while (i < iLen) {
                                                   if (element.firstChild.children[i].name &&
                                                       element.firstChild.children[i].name == sColumnName) {
                                                       iIndex = i;
                                                       break
                                                   }
                                                   i++
                                               }
                                               return iIndex
                                           }

                                           function getPrimaryFieldName() {
                                               return element.primaryfieldname
                                           }

                                           function getPrimaryFieldLabel() {
                                               var oXmlDoc = XUI.Xml.LoadXml(this.ParentGridControl.layoutXml);
                                               return oXmlDoc
                                                   .selectSingleNode("columns/column[@fieldname='" +
                                                       this.PrimaryFieldName +
                                                       "']").attributes.getNamedItem("label").text
                                           }

                                           function SendShortcut(bThroughEmail, iObjectTypeCode) {
                                               SendSelectedRecordsUrl(bThroughEmail,
                                                   ParentGridControl.id,
                                                   iObjectTypeCode)
                                           }

                                           function getPrimaryFieldColumnIndex() {
                                               if (!IsNull(element.primaryfieldname)) {
                                                   var colIndex = FindColumnIndex(element.primaryfieldname);
                                                   if (colIndex != -1)
                                                       return colIndex
                                               }
                                               for (var o = element.firstChild.children,
                                                   iLen = o.length,
                                                   i = 0;
                                                   i < iLen;
                                                   i++)
                                                   if (o[i].name)
                                                       return i
                                           }

                                           function handleAutoResize(oColumn) {
                                               handleResize(oColumn, iLen + 10);
                                               handleResizeCleanup()
                                           }

                                           function getColsWidths() {
                                               for (var s = "",
                                                   o = element.firstChild.children,
                                                   iLen = o.length,
                                                   i = 0;
                                                   i < iLen;
                                                   i++)
                                                   if (o[i].name) {
                                                       if (s != "")
                                                           s += ",";
                                                       s += o[i].width
                                                   }
                                               return s
                                           }

                                           function renderToolTip() {
                                               var o = event.srcElement;
                                               if (o && o.tagName == "NOBR" && o.title == "" && o.innerText != "")
                                                   o.title = o.innerText
                                           }

                                           function findTargetRow(oElement) {
                                               while (!IsNull(oElement) && (oElement.tagName != "TR" || !oElement.oid))
                                                   oElement = oElement.parentElement;
                                               return oElement
                                           }

                                           function handleDblClick() {
                                               o = getSrcRow();
                                               if (!IsNull(o))
                                                   if ((event.ctrlKey ||
                                                           event.srcElement.tagName == "INPUT" &&
                                                           event.srcElement.type == "checkbox") &&
                                                       o.selected)
                                                       unselectRow(o, true, true);
                                                   else
                                                       handleSelectRow(o);
                                               var oSelectedRecords = getSelectedRecords();
                                               if (oSelectedRecords.length == 0)
                                                   return;
                                               var oSelRec = oSelectedRecords[0],
                                                   oTr = oSelRec[3];
                                               openRecord(oTr)
                                           }

                                           function HandlePrimaryFieldClick() {
                                               if (ParentGridControl == null)
                                                   return;
                                               var dataProvider = ParentGridControl.GetProperty("dataProvider");
                                               if (!IsNull(dataProvider) &&
                                                   dataProvider ==
                                                   "Microsoft.Crm.Application.Controls.LookupGridDataProvider")
                                                   handleDblClick();
                                               else {
                                                   var oTr = getSrcRow();
                                                   !IsNull(oTr) &&
                                                       openRecord(oTr)
                                               }
                                           }

                                           function openRecord(oTr) {
                                               if (ParentGridControl == null)
                                                   return;
                                               if (ParentGridControl.GetParameter("disableDblClick") == "1")
                                                   return;
                                               if (_iTotalRecords == 0)
                                                   return;
                                               window.clearTimeout(_iClickTimer);
                                               _iClickTimer = null;
                                               oTr = findTargetRow(oTr);
                                               if (IsNull(oTr))
                                                   return;
                                               var iOTC = element.oname;
                                               if (!IsNull(oTr.otype))
                                                   iOTC = oTr.otype;
                                               var oEvent = raiseOnBeforeFormLoadEvent(oTr, iOTC, oTr.oid);
                                               if (oEvent.returnValue == true) {
                                                   var sParams = getParentEntityIdParams(),
                                                       gridControl = $find(this.ParentGridControl.id);
                                                   if (!IsNull(gridControl) &&
                                                       !IsNull(Mscrm.PageManager) &&
                                                       !IsNull(Mscrm.PageManager.get_instance()) &&
                                                       Mscrm.PageManager.isFlatUIPage() &&
                                                       Mscrm.PageManager.isFlatObject(parseInt(element.oname, 10))) {
                                                       var gridData = {};
                                                       gridData[Mscrm.RecordSetNavigation.PrimaryFieldName] = this
                                                           .PrimaryFieldName;
                                                       gridData[Mscrm.RecordSetNavigation
                                                           .PrimaryFieldColumnIndex] = this.PrimaryFieldColumnIndex;
                                                       gridData[Mscrm.RecordSetNavigation.PageNumber] = this
                                                           .ParentGridControl.PageNumber;
                                                       var gridXmlKey = String
                                                           .format(Mscrm.RecordSetNavigation.GridXmlMask,
                                                               this.ParentGridControl.PageNumber);
                                                       gridData[gridXmlKey] = this.ParentGridControl.gridXml;
                                                       gridData[Mscrm.RecordSetNavigation.LayoutXml] = this
                                                           .ParentGridControl.layoutXml;
                                                       gridData[Mscrm.RecordSetNavigation
                                                               .RecordPosition] =
                                                           findCurrentRecordPosition(this.AllRecords, oTr.oid);
                                                       var viewName = this.ParentGridControl.GetParameter("viewTitle");
                                                       if (IsNull(viewName) || viewName.length == 0)
                                                           viewName = LOCID_GRID_NO_VIEW_NAME;
                                                       var isSearch = false,
                                                           gridId = this.ParentGridControl.id,
                                                           newVSControl = $find(gridId + "_SavedNewQuerySelector");
                                                       if (!IsNull(newVSControl) &&
                                                           newVSControl.showNewVSControl &&
                                                           !newVSControl.showOriginalSelectBox)
                                                           if (newVSControl.selectedViewName == LOCID_SEARCH_RESULTS)
                                                               isSearch = true;
                                                       var viewSelector = this.element.document
                                                           .getElementById(gridId + "_SavedQuerySelector");
                                                       if (!isSearch &&
                                                           !IsNull(viewSelector) &&
                                                           !IsNull(viewSelector.SelectedOption) &&
                                                           !IsNull(viewSelector.SelectedOption.Search))
                                                           if (viewSelector.SelectedOption.Search)
                                                               isSearch = true;
                                                       if (isSearch) {
                                                           viewName = LOCID_SEARCH_RESULTS;
                                                           var
                                                               findCriteria = this.element.document
                                                                   .getElementById(gridId + "_findCriteria").value;
                                                           if (!IsNull(findCriteria))
                                                               viewName = String
                                                                   .format(LOCID_WINDOW_TITLE_FORMAT,
                                                                       viewName,
                                                                       findCriteria)
                                                       }
                                                       gridData[Mscrm.RecordSetNavigation.ViewName] = viewName;
                                                       var moreRecordsKey = String
                                                           .format(Mscrm.RecordSetNavigation.MoreRecordsMask,
                                                               this.ParentGridControl.PageNumber);
                                                       gridData[moreRecordsKey] = this.MoreRecords;
                                                       var isPrimaryFieldInView =
                                                               this.ParentGridControl.layoutXml
                                                                   .indexOf('fieldname="' +
                                                                       this.PrimaryFieldName +
                                                                       '"') >=
                                                                   0,
                                                           columns = [];
                                                       if (isPrimaryFieldInView) {
                                                           columns[0] = this.PrimaryFieldName;
                                                           gridData[Mscrm.RecordSetNavigation.DisplayFieldName] = this
                                                               .PrimaryFieldName;
                                                           gridData[Mscrm.RecordSetNavigation.DisplayFieldLabel] = this
                                                               .PrimaryFieldLabel;
                                                           gridData[Mscrm.RecordSetNavigation
                                                               .DisplayFieldColumnIndex] = this.PrimaryFieldColumnIndex
                                                       } else {
                                                           var
                                                               oXmlDoc = XUI.Xml
                                                                   .LoadXml(this.ParentGridControl.layoutXml),
                                                               oNode = oXmlDoc.selectSingleNode("columns/column");
                                                           columns[0] = oNode.attributes.getNamedItem("fieldname").text;
                                                           gridData[Mscrm.RecordSetNavigation.DisplayFieldName] = oNode
                                                               .attributes.getNamedItem("fieldname").text;
                                                           gridData[Mscrm.RecordSetNavigation.DisplayFieldLabel] = oNode
                                                               .attributes.getNamedItem("label").text;
                                                           gridData[Mscrm.RecordSetNavigation
                                                               .DisplayFieldColumnIndex] = 2
                                                       }
                                                       var recordsKey = String
                                                           .format(Mscrm.RecordSetNavigation.RecordsMask,
                                                               this.ParentGridControl.PageNumber);
                                                       gridData[recordsKey] = Sys.Serialization.JavaScriptSerializer
                                                           .serialize(getGridRecords(this.element,
                                                               columns,
                                                               this.ParentGridControl.layoutXml));
                                                       var cacheParams = {};
                                                       cacheParams["data"] = gridData;
                                                       if (Mscrm.NavigationMode.DefaultNavigationMode ==
                                                           Mscrm.NavigationMode.NavigationModeNewWindow) {
                                                           cacheParams["cacheScope"] = Mscrm.CacheScope.ChildOnly;
                                                           cacheParams["purgeDataOnCacheSync"] = true
                                                       }
                                                       var retValues = gridControl
                                                           .raiseEvent(Mscrm.ScriptEvents.InsertCacheData, cacheParams);
                                                       if (!IsNull(retValues) && retValues.length > 0) {
                                                           if (IsNull(sParams) || sParams == "")
                                                               sParams = "?";
                                                           else
                                                               sParams += "&";
                                                           sParams +=
                                                               "rskey=" + CrmEncodeDecode.CrmUrlEncode(retValues[0]);
                                                           sParams +=
                                                               "&_gridType=" +
                                                               CrmEncodeDecode.CrmUrlEncode(element.oname)
                                                       }
                                                   }
                                                   openObj(iOTC, oTr.oid, sParams)
                                               }
                                           }

                                           function findCurrentRecordPosition(rSet, rId) {
                                               if (IsNull(rSet))
                                                   return -1;
                                               var pos = 0;
                                               while (pos < rSet.length) {
                                                   if (rSet[pos][0] == rId)
                                                       return pos;
                                                   pos++
                                               }
                                               return -1
                                           }

                                           function raiseOnBeforeFormLoadEvent(oRow, iOTC, sID) {
                                               var oEvent = this.createEventObject();
                                               oEvent.ObjectTypeCode = iOTC;
                                               oEvent.ObjectID = sID;
                                               oEvent.ObjectRow = oRow;
                                               oEvent.returnValue = true;
                                               OnBeforeFormLoad.fire(oEvent);
                                               return oEvent
                                           }

                                           function getSrcRow(isClicked) {
                                               if (_iTotalRecords == 0) {
                                                   if (typeof ParentGridControl != "undefined" &&
                                                       !IsNull(ParentGridControl) &&
                                                       ParentGridControl.GetParameter("LoadOnDemand") == "1" &&
                                                       !IsNull(event) &&
                                                       event.srcElement.id == "LoadOnDemandMessage") {
                                                       ParentGridControl.SetParameter("LoadOnDemand", "0");
                                                       ParentGridControl
                                                           .SetParameter("LoadOnDemand_GridEmptyMessage", "");
                                                       ParentGridControl.Refresh()
                                                   }
                                                   return
                                               }
                                               var o = event.srcElement;
                                               switch (o.tagName) {
                                               case "TBODY":
                                                   return;
                                               case "IMG":
                                                   o = o.parentElement;
                                                   if (o.tagName != "SPAN" && o.tagName != "NOBR") {
                                                       o = o.parentElement;
                                                       break
                                                   }
                                               case "SPAN":
                                                   if (o.tagName == "SPAN")
                                                       o = o.parentElement;
                                               case "LI":
                                                   if (o.tagName == "LI")
                                                       o = o.parentElement;
                                               case "A":
                                                   if (o.tagName == "A") {
                                                       if (isClicked)
                                                           return o;
                                                       o = o.parentElement
                                                   }
                                               case "NOBR":
                                                   if (o.tagName == "NOBR")
                                                       o = o.parentElement;
                                               case "INPUT":
                                                   if (o.tagName == "INPUT" && o.type == "checkbox")
                                                       o = o.parentElement;
                                               case "TD":
                                                   if (!Sys.UI.DomElement.containsCssClass(o, "ms-crm-List-DataCell") &&
                                                       !Sys.UI.DomElement
                                                       .containsCssClass(o, "ms-crm-List-SelectedRow") &&
                                                       !Sys.UI.DomElement
                                                       .containsCssClass(o, "ms-crm-List-HoveredRow") &&
                                                       !Sys.UI.DomElement
                                                       .containsCssClass(o, "ms-crm-List-SelectedMultilineRow") &&
                                                       !Sys.UI.DomElement
                                                       .containsCssClass(o, "ms-crm-List-HoveredMultilineRow"))
                                                       return;
                                                   o = o.parentElement;
                                                   break;
                                               case "TR":
                                                   break;
                                               default:
                                                   return
                                               }
                                               return o
                                           }

                                           function handleClick() {
                                               var o = event.srcElement,
                                                   srcElement = o;
                                               if (o.tagName == "IMG")
                                                   if ((o.src.indexOf("grid") > 0 ||
                                                           o.className.indexOf("ms-crm-ImageStrip-r") > 0) &&
                                                       !event.ctrlKey) {
                                                       o = o.parentElement.parentElement;
                                                       !o.selected &&
                                                           handleSelectRow(o);
                                                       PreviewRow(o);
                                                       return
                                                   }
                                               o = getSrcRow(true);
                                               if (!IsNull(o)) {
                                                   if (o.tagName == "A") {
                                                       o.id.indexOf("primaryField") != -1 &&
                                                           HandlePrimaryFieldClick();
                                                       return
                                                   }
                                                   if ((event.ctrlKey ||
                                                           srcElement
                                                           .tagName ==
                                                           "INPUT" &&
                                                           srcElement.type == "checkbox") &&
                                                       o.selected)
                                                       unselectRow(o, true, true);
                                                   else
                                                       handleSelectRow(o);
                                                   var checkBoxId = "checkBox_" + o.oid,
                                                       checkBox = $get(checkBoxId, o);
                                                   checkBox != null &&
                                                       checkBox.focus()
                                               }
                                           }

                                           function handleKeyDown() {
                                               var oCurrentScrollRow;
                                               if (event.srcElement.tagName == "INPUT" &&
                                                   event.srcElement.className != "ms-crm-RowCheckBox")
                                                   return;
                                               if (event.altKey) {
                                                   event.returnValue = false;
                                                   return
                                               }
                                               switch (event.keyCode) {
                                               case KEY_DOWN:
                                               case KEY_UP:
                                                   event.returnValue = false;
                                                   var i = 0,
                                                       increment = 0;
                                                   if (event.keyCode == KEY_DOWN) {
                                                       if (_iLastPickedIndex >= DataTableBody.rows.length - 1)
                                                           break;
                                                       increment = 1
                                                   } else if (event.keyCode == KEY_UP) {
                                                       if (_iLastPickedIndex <= 0)
                                                           break;
                                                       increment = -1
                                                   }
                                                   i = _iLastPickedIndex + increment;
                                                   if (DataTableBody.rows[i].cells[0].className ==
                                                       "ms-crm-List-PreviewCell" ||
                                                       DataTableBody.rows[i].cells[1].className ==
                                                       "ms-crm-List-PreviewCell")
                                                       i = i + increment;
                                                   oCurrentScrollRow = DataTableBody.rows[i];
                                                   var checkBoxId = "checkBox_" + oCurrentScrollRow.oid,
                                                       checkBox = $get(checkBoxId, oCurrentScrollRow);
                                                   if (!IsNull(checkBox))
                                                       try {
                                                           checkBox.focus()
                                                       } catch (exception) {
                                                       }
                                                   oCurrentScrollRow.fireEvent("onclick");
                                                   var i = window.setInterval(function() {
                                                       try {
                                                           !scrollGrid(oCurrentScrollRow, false) &&
                                                               window.clearInterval(i)
                                                       } catch (e) {
                                                           window.clearInterval(i)
                                                       }
                                                   });
                                                   break;
                                               case KEY_SELECTALL:
                                                   event.ctrlKey &&
                                                       _iTotalRecords > 0 &&
                                                       selectAllRows();
                                                   break;
                                               case KEY_P:
                                                   if (ParentGridControl.GetParameter("preview") == "1")
                                                       event.returnValue = false;
                                                   break;
                                               case KEY_SPACE:
                                                   if (ParentGridControl.MaximumSelectableRecords != 0)
                                                       event.returnValue = false;
                                                   return
                                               }
                                           }

                                           function handleKeyUp() {
                                               if (event.altKey ||
                                                   event.shiftKey ||
                                                   event.ctrlKey && event.keyCode != KEY_SELECTALL)
                                                   return false;
                                               switch (event.keyCode) {
                                               case KEY_ENTER:
                                                   if (_iTotalRecords > 0 && _iLastPickedIndex != -1) {
                                                       var srcElement = event.srcElement.parentElement.parentElement;
                                                       if (srcElement.tagName == "A" &&
                                                           o.id.indexOf("primaryField") == -1)
                                                           srcElement.fireEvent("onclick");
                                                       else
                                                           DataTableBody.rows[_iLastPickedIndex].fireEvent("ondblclick")
                                                   }
                                                   break;
                                               case KEY_P:
                                                   ParentGridControl.GetParameter("preview") == "1" &&
                                                       PreviewRow(DataTableBody.rows[_iLastPickedIndex]);
                                                   break;
                                               case KEY_SPACE:
                                                   if (ParentGridControl.MaximumSelectableRecords != 0) {
                                                       oTr = getSrcRow();
                                                       if (!IsNull(oTr))
                                                           if (oTr.selected)
                                                               unselectRow(oTr, true, true);
                                                           else
                                                               handleSelectRow(oTr)
                                                   }
                                                   break;
                                               case appGridKeyRight:
                                                   if (MoreRecords)
                                                       ParentGridControl.PageNumber = ParentGridControl.PageNumber + 1;
                                                   break;
                                               case appGridKeyLeft:
                                                   if (ParentGridControl.PageNumber > 1)
                                                       ParentGridControl.PageNumber = ParentGridControl.PageNumber - 1;
                                                   break
                                               }
                                           }

                                           function scrollGrid(oRow, bDown) {
                                               var dataAreaId = ParentGridControl.id + "_divDataArea",
                                                   oDataArea = ParentGridControlDataArea.all[dataAreaId],
                                                   iVisibleMinY = oDataArea.scrollTop,
                                                   iVisibleMaxY = oDataArea.clientHeight + iVisibleMinY,
                                                   iRowPosition;
                                               if (bDown) {
                                                   iRowPosition = oRow.offsetTop + oRow.clientHeight;
                                                   if (iRowPosition > iVisibleMaxY) {
                                                       oDataArea.doScroll("scrollbarDown");
                                                       return true
                                                   }
                                               } else {
                                                   iRowPosition = oRow.offsetTop;
                                                   if (iRowPosition < iVisibleMinY) {
                                                       oDataArea.doScroll("scrollbarUp");
                                                       return true
                                                   }
                                               }
                                               return false
                                           }

                                           var _iShiftClickedIndex = -1;

                                           function handleSelectRow(oRow) {
                                               if (!IsNull(oRow.IsDisabled) && oRow.IsDisabled == "1")
                                                   return;
                                               if (event && event.shiftKey && _iLastPickedIndex != -1) {
                                                   if (_iShiftClickedIndex == -1)
                                                       _iShiftClickedIndex = _iLastPickedIndex;
                                                   oRow.sectionRowIndex < _iShiftClickedIndex
                                                       ? SelectRecords(oRow.sectionRowIndex, _iShiftClickedIndex, true)
                                                       : SelectRecords(_iShiftClickedIndex, oRow.sectionRowIndex, true);
                                                   _iLastPickedIndex = oRow.sectionRowIndex
                                               } else {
                                                   if (event && !event.ctrlKey)
                                                       if (event.keyCode != KEY_SPACE &&
                                                           !(
                                                               event.srcElement.tagName == "INPUT" &&
                                                                   event.srcElement.type == "checkbox") ||
                                                           this.ParentGridControl.MaximumSelectableRecords == 1) {
                                                           var
                                                               multiSelectOnRowClick = this.ParentGridControl
                                                                   .GetParameter("multiSelectOnRowClick");
                                                           (
                                                                   IsNull(multiSelectOnRowClick) ||
                                                                       multiSelectOnRowClick != "true") &&
                                                               UnselectRecords(oRow)
                                                       }
                                                   selectRow(oRow);
                                                   _iLastPickedIndex = oRow.sectionRowIndex;
                                                   _iShiftClickedIndex = -1
                                               }
                                               raiseSelectionChangeEvent()
                                           }

                                           function toggleCheckbox(oRow, selected, hovered) {
                                               var checkBoxId = "checkBox_" + oRow.oid,
                                                   checkBox = $get(checkBoxId, oRow);
                                               checkBox.checked = selected;
                                               oRow.selected = selected
                                           }

                                           function selectRow(oRow, fRaiseEvent) {
                                               if (IsNull(oRow))
                                                   return false;
                                               if (typeof ParentGridControl == "undefined" || IsNull(ParentGridControl))
                                                   return false;
                                               var iMax = ParentGridControl.MaximumSelectableRecords;
                                               if (oRow.selected)
                                                   return true;
                                               if (0 == iMax)
                                                   return false;
                                               if (iMax > 0 && _iTotalSelected + 1 <= iMax || iMax == -1) {
                                                   if (oRow.firstChild.className != "ms-crm-List-PreviewCell") {
                                                       _iTotalSelected++;
                                                       toggleCheckbox(oRow, true, false);
                                                       if (oRow.className == "ms-crm-List-MultilineRow" ||
                                                           oRow.className == "ms-crm-List-HoveredMultilineRow")
                                                           applyStyle(oRow, "ms-crm-List-SelectedMultilineRow");
                                                       else
                                                           applyStyle(oRow, "ms-crm-List-SelectedRow");
                                                       _aSelectedRows.push(oRow);
                                                       !IsNull(fRaiseEvent) &&
                                                           fRaiseEvent &&
                                                           raiseSelectionChangeEvent();
                                                       return true
                                                   }
                                               } else {
                                                   if (iMax == 1)
                                                       alert(LOCID_GRID_TOO_MANY_RECORDS_1);
                                                   else
                                                       alert(formatString(LOCID_GRID_TOO_MANY_RECORDS, iMax));
                                                   toggleCheckbox(oRow, false, false);
                                                   return false
                                               }
                                           }

                                           function unselectRow(oRow, fUpdateSelectedRows, fRaiseEvent) {
                                               if (!IsNull(oRow) && oRow.selected) {
                                                   var oTmp = DataTableBody.rows[oRow.sectionRowIndex + 1];
                                                   if (!IsNull(oTmp))
                                                       oTmp = oTmp.firstChild.firstChild;
                                                   _iTotalSelected--;
                                                   if (oRow.className == "ms-crm-List-SelectedMultilineRow")
                                                       applyStyle(oRow, "ms-crm-List-MultilineRow");
                                                   else
                                                       applyStyle(oRow, "ms-crm-List-Row");
                                                   toggleCheckbox(oRow, false, false);
                                                   if (!IsNull(fUpdateSelectedRows) && fUpdateSelectedRows)
                                                       for (var iLength = _aSelectedRows.length,
                                                           i = 0;
                                                           i < iLength;
                                                           i++)
                                                           if (oRow.sectionRowIndex == _aSelectedRows[i].sectionRowIndex
                                                           ) {
                                                               _aSelectedRows.splice(i, 1);
                                                               break
                                                           }
                                                   !IsNull(fRaiseEvent) &&
                                                       fRaiseEvent &&
                                                       raiseSelectionChangeEvent()
                                               }
                                           }

                                           function SaveSelectRows() {
                                               _aSavedSelectedRows = _aSelectedRows.slice(0)
                                           }

                                           function ReSelectRows() {
                                               var iLength = _aSavedSelectedRows.length;
                                               if (iLength > 0)
                                                   for (var i = 0; i < iLength; i++)
                                                       selectRow(_aSavedSelectedRows[i]);
                                               else
                                                   NumberOfRecords > 0 &&
                                                       SelectDefaultRecord() &&
                                                       SelectRecords(0, 0, true);
                                               raiseSelectionChangeEvent()
                                           }

                                           function selectAllRows() {
                                               SelectRecords(0, DataTableBody.rows.length - 1)
                                           }

                                           function applyStyle(o, sClass) {
                                               var previewImage = getPreviewImage(o);
                                               if (previewImage != null) {
                                                   var previewImageInfo;
                                                   if (sClass == "ms-crm-List-SelectedRow" ||
                                                       sClass == "ms-crm-List-SelectedMultilineRow") {
                                                       previewImageInfo = Mscrm.ImageStrip
                                                           .getImageInfo(Mscrm.CrmUri
                                                               .create("/_imgs/grid/row_selected.gif"));
                                                       previewImage.alt = LOCID_GRID_SELECTED_ROW;
                                                       if (LOCID_UI_DIR == "RTL")
                                                           previewImage.style.filter = "FlipH();"
                                                   } else {
                                                       previewImageInfo = Mscrm.ImageStrip
                                                           .getImageInfo(Mscrm.CrmUri.create("/_imgs/grid/r.gif"));
                                                       previewImage.alt = LOCID_GRID_UNSELECTED_ROW;
                                                       if (LOCID_UI_DIR == "RTL")
                                                           previewImage.style.filter = "FlipH();"
                                                   }
                                                   previewImage.src = previewImageInfo.source;
                                                   previewImage.className = Mscrm.ImageStrip
                                                       .replaceExistingImageStripClass(previewImage.className,
                                                           previewImageInfo.cssClass)
                                               }
                                               o.className = sClass
                                           }

                                           function getContextMenuDiv(oSrc) {
                                               while (!(oSrc
                                                   .tagName ==
                                                   "TABLE" &&
                                                   oSrc.className == "ms-crm-ListArea")) {
                                                   oSrc = oSrc.parentElement;
                                                   if (IsNull(oSrc))
                                                       return null
                                               }
                                               return oSrc.all("divMenu")
                                           }

                                           function handleContextMenu() {
                                               var oMenu = getContextMenuDiv(event.srcElement);
                                               if (IsNull(oMenu))
                                                   return;
                                               _o = findTargetRow(event.srcElement);
                                               event.returnValue = false;
                                               !IsNull(_o) &&
                                                   !IsNull(_o.firstChild) &&
                                                   _o.firstChild.className != "ms-crm-List-PreviewCell" &&
                                                   UnselectRecords(_o);
                                               popupToggle(IsNull(_o) || IsNull(_o.oid));
                                               _oPop = openPopup();
                                               for (var saPopupStyles =
                                                            ["/_nav/menu.css.aspx", "/_common/styles/theme.css.aspx"],
                                                   menuCssUrl,
                                                   menuUrlString,
                                                   oXmlHttp,
                                                   i = 0;
                                                   i < saPopupStyles.length;
                                                   i++) {
                                                   menuCssUrl = Mscrm.CrmUri.create(saPopupStyles[i]);
                                                   menuCssUrl.get_query()["lcid"] = USER_LANGUAGE_CODE;
                                                   menuUrlString = menuCssUrl.toString();
                                                   oXmlHttp = new XMLHttpRequest;
                                                   oXmlHttp.open("Get", menuUrlString, false);
                                                   oXmlHttp.send(null);
                                                   _oPop.document.createStyleSheet(menuUrlString)
                                               }
                                               var fontCssUrl = Mscrm.CrmUri.create("/_common/styles/fonts.css.aspx");
                                               fontCssUrl.get_query()["lcid"] = USER_LANGUAGE_CODE;
                                               _oPop.document.createStyleSheet(fontCssUrl.toString());
                                               var oTmp = _oPop.document.body;
                                               oTmp.innerHTML = oMenu.outerHTML;
                                               with (oTmp.firstChild) {
                                                   style.display = "inline";
                                                   onmouseover = this.menuMouseMoveHandler
                                               }
                                               oTmp.attachEvent("onkeydown", handleContextMenuKeyDown);
                                               oTmp.attachEvent("onkeyup", handleContextMenuKeyUp);
                                               _oPop.document.parentDataArea = this;
                                               _oPop.document.parentGrid = ParentGridControl;
                                               _oPop.document.parentRow = _o;
                                               _oPop.document.parentPopup = _oPop;
                                               _oPop.show(0, 0, 0, 0);
                                               _iPopH = oTmp.firstChild.offsetHeight;
                                               _iPopW = oTmp.firstChild.offsetWidth + 10;
                                               _iPopX = event.clientX;
                                               _iPopY = event.clientY;
                                               if (LOCID_UI_DIR == "RTL")
                                                   _oPop
                                                       .show(event.screenX - 1 - _iPopW,
                                                           event.screenY - 5,
                                                           _iPopW,
                                                           _iPopH);
                                               else
                                                   _oPop.show(event.screenX - 1, event.screenY - 5, _iPopW, _iPopH);
                                               if (!IsNull(_oPop) && !IsNull(_oPop.document) && _oPop.isOpen) {
                                                   var menuItem = _oPop.document.body.all[1];
                                                   if (!IsNull(menuItem) &&
                                                   (menuItem.className == "ms-crm-Standard-Item" ||
                                                       menuItem.className == "ms-crm-Standard-Item-Glow")) {
                                                       !menuItem.isDisabled &&
                                                           menuItem.focus();
                                                       _menuLastPickedIndex = menuItem
                                                   }
                                               }
                                           }

                                           function menuMouseMoveHandler() {
                                               var o = _oPop.document.parentWindow.event.srcElement;
                                               if (o.tagName == "NOBR")
                                                   o = o.parentElement;
                                               if (o.id == "divMenu" || o.tagName == "HR")
                                                   return;
                                               popupResetGlow(_menuLastPickedIndex);
                                               popupGlow(o)
                                           }

                                           function popupResetGlow(o) {
                                               if (!IsNull(o) && o.className == "ms-crm-Standard-Item-Glow")
                                                   o.className = "ms-crm-Standard-Item"
                                           }

                                           function popupGlow(o) {
                                               if (o.className == "ms-crm-Standard-Item")
                                                   o.className = "ms-crm-Standard-Item-Glow";
                                               if (o.className == "ms-crm-Standard-Item-Glow")
                                                   _menuLastPickedIndex = o
                                           }

                                           function popupToggle(b) {
                                               var oMenu = getContextMenuDiv(event.srcElement);
                                               if (IsNull(oMenu))
                                                   return;
                                               var o = oMenu.all.tags("div");
                                               if (!IsNull(o) && o.length > 0)
                                                   _menuLastPickedIndex = o[0];
                                               for (var i = 0; i < o.length; i++) {
                                                   o[i].disabled = false;
                                                   var sFlag = o[i].getAttribute("disableonemptygrid");
                                                   if (b && sFlag != null && sFlag == "yes")
                                                       o[i].disabled = true
                                               }
                                           }

                                           function getContextMenuItemEvent() {
                                               if (!IsNull(_oPop) && !IsNull(_oPop.document)) {
                                                   var o = _oPop.document.parentWindow;
                                                   if (!IsNull(o))
                                                       return o.event
                                               }
                                               return null
                                           }

                                           function handleContextMenuKeyDown() {
                                               var e = getContextMenuItemEvent();
                                               if (IsNull(_oPop) || IsNull(_oPop.document))
                                                   return;
                                               var popupDocument = _oPop.document,
                                                   oMenu = popupDocument.all["divMenu"];
                                               if (IsNull(e))
                                                   return e;
                                               if (e.altKey) {
                                                   e.returnValue = false;
                                                   return
                                               }
                                               var o,
                                                   next,
                                                   previous;
                                               switch (e.keyCode) {
                                               case KEY_DOWN:
                                                   o = _menuLastPickedIndex;
                                                   if (!IsNull(o) && o != oMenu.lastChild) {
                                                       next = o.nextSibling;
                                                       while (!IsNull(next) && next.tagName == "HR")
                                                           next = next.nextSibling
                                                   } else if (o == oMenu.lastChild)
                                                       next = oMenu.firstChild;
                                                   !IsNull(o) &&
                                                       popupResetGlow(o);
                                                   !IsNull(next) &&
                                                       popupGlow(next);
                                                   break;
                                               case KEY_UP:
                                                   o = _menuLastPickedIndex;
                                                   if (!IsNull(o) && o != oMenu.firstChild) {
                                                       previous = o.previousSibling;
                                                       while (!IsNull(previous) && previous.tagName == "HR")
                                                           previous = previous.previousSibling
                                                   } else if (o == oMenu.firstChild)
                                                       previous = oMenu.lastChild;
                                                   !IsNull(o) &&
                                                       popupResetGlow(o);
                                                   !IsNull(previous) &&
                                                       popupGlow(previous);
                                                   break
                                               }
                                               popupDocument.parentWindow.event.cancelBubble = true;
                                               popupDocument.parentWindow.event.returnValue = false
                                           }

                                           function handleContextMenuKeyUp() {
                                               var e = getContextMenuItemEvent();
                                               if (IsNull(e))
                                                   return e;
                                               if (e.altKey || e.shiftKey || e.ctrlKey)
                                                   return false;
                                               var popupDocument = _oPop.document;
                                               switch (e.keyCode) {
                                               case KEY_ENTER:
                                                   _menuLastPickedIndex.click();
                                                   break;
                                               case KEY_ESC:
                                                   _oPop.isOpen &&
                                                       _oPop.hide();
                                                   break
                                               }
                                               popupDocument.parentWindow.event.cancelBubble = true;
                                               popupDocument.parentWindow.event.returnValue = false
                                           }

                                           function getPreviewImage(oTr) {
                                               var previewImageId = "previewImage_" + oTr.oid,
                                                   previewImage = $get(previewImageId, oTr);
                                               return previewImage
                                           }

                                           function collapseRow(oTr) {
                                               var previewImage = getPreviewImage(oTr);
                                               if (!IsNull(oTr) && oTr.expanded) {
                                                   var previewImageInfo;
                                                   if (oTr.selected) {
                                                       previewImageInfo = Mscrm.ImageStrip
                                                           .getImageInfo(Mscrm.CrmUri
                                                               .create("/_imgs/grid/row_selected.gif"));
                                                       previewImage.alt = LOCID_GRID_SELECTED_ROW
                                                   } else {
                                                       previewImageInfo = Mscrm.ImageStrip
                                                           .getImageInfo(Mscrm.CrmUri.create("/_imgs/grid/r.gif"));
                                                       previewImage.alt = LOCID_GRID_UNSELECTED_ROW;
                                                       if (LOCID_UI_DIR == "RTL")
                                                           previewImage.style.filter = "FlipH();"
                                                   }
                                                   previewImage.src = previewImageInfo.source;
                                                   previewImage.className = Mscrm.ImageStrip
                                                       .replaceExistingImageStripClass(previewImage.className,
                                                           previewImageInfo.cssClass);
                                                   DataTableBody.removeChild(oTr.nextSibling);
                                                   oTr.expanded = false;
                                                   _oPreviewed = null
                                               }
                                           }

                                           function expandRow(oTr) {
                                               if (IsNull(oTr))
                                                   return false;
                                               if (oTr.expanded) {
                                                   collapseRow(oTr);
                                                   return
                                               } else
                                                   _oPreviewed &&
                                                       collapseRow(_oPreviewed);
                                               if (!IsNull(oTr.otype)) {
                                                   var sType = oTr.otype;
                                                   _oXslProc = null
                                               } else
                                                   var sType = element.oname;
                                               if (!_oPreviewXml)
                                                   _oPreviewXml = new XMLHttpRequest;
                                               var oPreviewUrl = Mscrm.CrmUri.create("/_grid/preview.aspx");
                                               oPreviewUrl.get_query()["type"] = sType;
                                               oPreviewUrl.get_query()["id"] = oTr.oid;
                                               _oPreviewXml.open("GET", oPreviewUrl.toString(), false);
                                               _oPreviewXml.send();
                                               if (handleXMLErr(_oPreviewXml.responseXML) != ERROR_NONE)
                                                   return;
                                               var oNewTR = DataTableBody.insertRow(oTr.sectionRowIndex + 1);
                                               oNewTR.oid = oTr.oid;
                                               if (oTr.otype)
                                                   oNewTR.otype = oTr.otype;
                                               with (oNewTR) {
                                                   style.height = "100%";
                                                   onmouseover = function() {
                                                       window.event.cancelBubble = true
                                                   };
                                                   onclick = function() {
                                                       window.event.cancelBubble = true
                                                   }
                                               }
                                               var oTD = oNewTR.insertCell(0);
                                               with (oTD) {
                                                   className = "ms-crm-List-PreviewCell";
                                                   colSpan = oTr.cells.length;
                                                   innerHTML = _oPreviewXml.responseXML.firstChild.firstChild.text
                                               }
                                               oTr.expanded = true;
                                               oTr.style.paddingTop = "0px";
                                               var previewImage = getPreviewImage(oTr),
                                                   previewImageInfo = Mscrm.ImageStrip
                                                       .getImageInfo(Mscrm.CrmUri.create("/_imgs/grid/d.gif"));
                                               previewImage.src = previewImageInfo.source;
                                               previewImage.className = Mscrm.ImageStrip
                                                   .replaceExistingImageStripClass(previewImage.className,
                                                       previewImageInfo.cssClass);
                                               previewImage.alt = LOCID_GRID_PREVIEW_ROW;
                                               _oPreviewed = oTr
                                           }

                                       </script>
</public:component>