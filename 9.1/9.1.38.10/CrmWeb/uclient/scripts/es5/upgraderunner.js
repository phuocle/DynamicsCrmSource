(window.bundleExecutionMarkers=window.bundleExecutionMarkers||{})["scripts/es5/upgraderunner.js?v=1.4.9962-v91onpremise"]={begin:performance.now()},(window.__wpJsonpUci=window.__wpJsonpUci||[]).push([[108],{T86G:function(e,t,a){"use strict";a.r(t),a.d(t,"runUpgradeHandlers",(function(){return B}));var r=a("/j9Z"),n=a("2IT6"),i=a("kKUv");var o=a("Mxc4");
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */var s=a("x9BS"),u=a("WS0f"),c=a("OJ8X"),f=a("oPba"),l=a("r5R/"),d=a("H/RR"),p=a("tvev"),g=a("AX1v");function m(e,t){return new Promise((function(a,r){e.dispatch(Object(l.a)(d.a.IsOfflineUpgradeDoneKey)).then((function(e){return t.info("getOfflineUpgradeStatus is successfully retrieve data from session state"),Object(u.a)(e)?a(!1):a(!0)})).catch((function(e){return t.error("getOfflineUpgradeStatus is failed to retrieve key IsOfflineUpgradeDoneKey from session state"),r(e)}))}))}var O=a("c56u"),y=a("9r0m"),v=a("96h0");var S,b=a("c/eZ"),h=a("UBp/"),D=a("GUnN"),P=a("lMVv"),N=a("kh6f"),U=a("gBKR"),I=a("Sn3h");!function(e){e.IdParameter="Id",e.ActionDataParameter="ActionData",e.SetStateRequestName="SetState",e.QualifyLeadRequestName="QualifyLead",e.LeadIdParameter="LeadId",e.EntityParameter="entity",e.SoapState="State",e.SoapStatus="Status",e.EntityMonikerSetState="EntityMoniker",e.ODataState="statecode",e.ODataStatus="statuscode",e.LogicalName="LogicalName",e.RequestName="RequestName",e.Attributes="Attributes",e.Parameters="Parameters",e.OfflineData="OfflineData",e.ODataType="@odata.type",e.ODataBind="@odata.bind",e.ODataEntityPrefix="Microsoft.Dynamics.CRM.",e.CustomerIdParameterName="customerid",e.MethodPost="POST",e.MethodPatch="PATCH"}(S||(S={}));var E=a("xcdS"),C=a("FnM+"),j=a("kyXW"),K=a("Y8Oo");
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */
function M(e){var t=new E.a;return t.retrieve(h.a.CommandString,new C.a(null)).nativePromise().then((function(t){N.c.info("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: upgradeNonCUDUpsyncRequests: Succeeded retrieving Non-Cud Requests: "+t.rows.length);for(var a=[],n=function(n){var i=t.rows.item(n);a.push(function(e,t){var a=(new DOMParser).parseFromString(e,"text/xml"),n=a.getElementsByTagName(S.RequestName)[0].textContent;return F(a.getElementsByTagName(S.Parameters)[0].childNodes,t,!1).then((function(e){if(n===S.SetStateRequestName)return function(e,t){var a=e[S.EntityMonikerSetState],n=a[S.ODataType].split(".").pop(),i=a[n+"id"];return x(n,t).then((function(t){var a={};return a[S.ODataState]=e[S.SoapState],-1!==e[S.SoapStatus]&&(a[S.ODataStatus]=e[S.SoapStatus]),{urlParameters:String.format("{0}({1})",t,i),additionalHeaders:{"If-match":"*","MSCRM.SuppressDuplicateDetection":"true"},body:JSON.stringify(a),method:S.MethodPatch}})).catch((function(e){var t=e.hasOwnProperty("_message")?e:new r.a(e.get_Message());throw N.c.error("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: upgradeNonCUDUpsyncRequests:getRequestForSetState: Failed with error: "+t.message),e}))}(e,t).then((function(e){return JSON.stringify(e)}));var a={Accept:"application/json",Prefer:'odata.include-annotations="*"'};return e[S.OfflineData]&&(a[S.OfflineData]=JSON.stringify(e[S.OfflineData]),delete e[S.OfflineData]),JSON.stringify({urlParameters:w(n,e),additionalHeaders:a,body:JSON.stringify(e),method:S.MethodPost})})).catch((function(e){var t=e.hasOwnProperty("_message")?e:new r.a(e.get_Message());throw N.c.error("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: upgradeNonCUDUpsyncRequests:convertSoaptoODataSerializedRequest: Failed with error: "+t.message),e}))}(i[S.ActionDataParameter],e).then((function(e){var t,a=((t={})[S.IdParameter]=i[S.IdParameter],t[S.ActionDataParameter]=e,t);return new K.a(a,j.a.Update,h.a.CommandString)})))},i=0;i<t.rows.length;i++)n(i);return Promise.all(a)})).then((function(e){return N.c.info("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: upgradeNonCUDUpsyncRequests: Succeeded in converting Non-Cud Requests to Odata requests"),t.performOperations(e,null,!1).nativePromise()})).catch((function(e){var t=e.hasOwnProperty("_message")?e:new r.a(e.get_Message());throw N.c.error("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: upgradeNonCUDUpsyncRequests:convertNonCudUpsyncRequests: Failed with error: "+t.message),e}))}function w(e,t){return e===S.QualifyLeadRequestName?(t[S.EntityParameter]=t[S.LeadIdParameter],delete t[S.LeadIdParameter],String.format("leads({0})/{1}{2}",t[S.EntityParameter][S.LeadIdParameter.toLowerCase()],S.ODataEntityPrefix,e)):e}function F(e,t,a){var r=[];return Array.prototype.forEach.call(e,(function(e){var n=e.getElementsByTagName("key")[0].textContent,i=e.getElementsByTagName("value")[0],o=i.getAttribute("i:type"),s=o?o.split(":").pop():null;r.push(function(e,t,a,r,n){var i,o=null;switch(a){case"guid":o=y.a.externalGuid(new y.a(t.textContent));break;case"boolean":o=Object(I.a)(t.textContent);break;case"OptionSetValue":o=Object(I.b)(t.getElementsByTagName("Value")[0].textContent);break;case"Money":o=Object(I.b)(t.textContent);break;case"EntityReference":var s=t.getElementsByTagName(S.LogicalName)[0].textContent,u=t.getElementsByTagName(S.IdParameter)[0].textContent;return function(e,t,a,r,n){var i,o;if(n)return x(t,r).then((function(r){var n;return(n={})[e+=e===S.CustomerIdParameterName?"_"+t+S.ODataBind:S.ODataBind]=String.format("{0}/({1})",r,a),n}),(function(e){return N.c.error("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: getKeyValueForEntityReference: Entity Metadata could not be retrieved for entity "+a+" with error "+Object(D.e)(e)),Promise.reject(e)})).catch((function(e){return N.c.error("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: getKeyValueForEntityReference: Constructing Entity reference for "+a+" failed with error "+e),Promise.reject(e)}));var s=((i={})[S.ODataType]=S.ODataEntityPrefix+t,i);return s[t+"id"]=a,Promise.resolve(((o={})[e]=s,o))}(e,s,u,r,n);case"Entity":return F(t.getElementsByTagName(S.Attributes)[0].childNodes,r,!0).then((function(t){var a;return(a={})[e]=t,a})).catch((function(e){return N.c.error("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: getKeyValueBasedOnType: parseParametersFromSoapNode: failed with error "+Object(D.e)(e)),Promise.reject(e)}));case"ArrayOfKeyValueOfstringstring":return F(t.childNodes,r,!0).then((function(t){var a;return(a={})[e]=t,a}));case"string":case"dateTime":default:o=t.textContent}return Promise.resolve(((i={})[e]=o,i))}(n,i,s,t,a))})),Promise.all(r).then((function(e){return Object.assign.apply(Object,Object(b.__spreadArrays)([{}],e))}))}function x(e,t){return t.dispatch(Object(U.f)(e,!1,[])).then((function(){return Object(P.h)(t.getState(),e).EntitySetName})).catch((function(e){return N.c.error("UPGRADE OFFLINE: UpgradeUpsyncNonCudCommands: getEntitySetName:Failed with error "+Object(D.e)(e)),Promise.reject(e)}))}
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */var R=a("gPja"),T=a("rpa8"),A=a("iZzZ"),L=a("t8f4");var _=a("fMeW");
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */function q(e){switch(e){case"640X480":return _.a.Res640x480;case"1024X768":return _.a.Res1024x768;case"1600X1200":return _.a.Res1600x1200;case"2048X1536":return _.a.Res2048x1536;case"2592X1936":return _.a.Res2592x1936;case"DeviceDefault":default:return _.a.DeviceDefault}}
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */var k=[{type:"preDbInit.offlinesetting.upgrade",execute:function(e,t,a){var r=t.TraceManager.getTracer("Offline");return parseInt(e.previousClientVersion,10)>=parseInt("9000000000",10)?(r.info("No need for preDbInitOfflineSettingUpgrader as previous version >= 9.0"),Promise.resolve()):(r.info("Getting offline settings"),m(a,r).then((function(n){return n?(r.info("preDbInitOfflineSettingUpgrader not run because store is already updated for Upgrade"),Promise.resolve()):function(e,t){var a=[];return a.push(e.DataSource.retrieveDataFromOfflineStore(d.a.OfflineDatabaseKey)),a.push(e.DataSource.retrieveDataFromOfflineStore(d.a.isTrialOrganizationKey)),a.push(e.DataSource.retrieveDataFromOfflineStore(d.a.MaxTimeKey)),a.push(e.DataSource.retrieveSessionState(d.a.OfflineProfileDataKey)),a.push(e.DataSource.retrieveSessionState(d.a.isMobileOfflineOptedInKey)),a.push(e.DataSource.retrieveSessionState(d.a.isMobileOfflineOptedOutKey)),a.push(e.DataSource.retrieveSessionState(d.a.OfflineDisabledInfoKey)),a.push(e.DataSource.retrieveSessionState(d.a.LastSuccessfulSaveOnCrmKey)),a.push(e.DataSource.retrieveSessionState(d.a.SyncErrorFailureMapKey)),Promise.all(a).then((function(a){if(a.length>0){t.info("getOfflineSettingsForUpgrade - retrieved some settings from the local store.");var r={},n=e.DataSource.get_UserContext();r[d.a.isMocaOfflineFCBEnabledKey]=n.get_IsMocaOfflineFeatureEnabled(),r[d.a.norsyncServerConnectionStringKey]=n.get_NorsyncServerConnectionString(),r[d.a.OfflineDatabaseKey]=Object(u.a)(a[0])?"":a[0].toString(),r[d.a.isTrialOrganizationKey]=!Object(u.a)(a[1])&&Object(f.a)(a[1].toString()),r[d.a.MaxTimeKey]=Object(u.a)(a[2])?"":a[2].toString();var i=a[3],o=Object(u.a)(i)||Object(u.a)(i[d.a.OfflineProfileDataKey])?null:i[d.a.OfflineProfileDataKey],s=Object(u.a)(o)?null:JSON.parse(o);Object(u.a)(s)?r[d.a.OfflineProfileDataKey]={}:(s[d.a.OfflineProfileIdKey]=Object(u.a)(s[d.a.OfflineProfileIdKey])?null:p.a.createFromObjectData(s[d.a.OfflineProfileIdKey]).toString(),r[d.a.OfflineProfileDataKey]=s);var c=a[4];r[d.a.isMobileOfflineOptedInKey]=Object(u.a)(c)||Object(u.a)(c[d.a.isMobileOfflineOptedInKey])?g.a.Default:c[d.a.isMobileOfflineOptedInKey];var l=a[5];return r[d.a.isMobileOfflineOptedOutKey]=!Object(u.a)(l)&&!Object(u.a)(l[d.a.isMobileOfflineOptedOutKey])&&Object(f.a)(l[d.a.isMobileOfflineOptedOutKey]),r[d.a.OfflineDisabledInfoKey]=Object(u.a)(a[6])?{}:a[6],r[d.a.LastSuccessfulSaveOnCrmKey]=Object(u.a)(a[7])?{}:a[7],r[d.a.SyncErrorFailureMapKey]=Object(u.a)(a[8])?{}:a[8],Promise.resolve(r)}return t.info("getOfflineSettingsForUpgrade - no settings retrieved from the local store, returning null."),Promise.resolve(null)})).catch((function(e){return Promise.reject(e)}))}(t,r).then((function(t){if(t){r.info("Adding offline data into upgrade context.");var n=Object(u.a)(t[d.a.OfflineDatabaseKey])?null:t[d.a.OfflineDatabaseKey];Object(u.a)(n)||a.dispatch(Object(s.b)(n)),e.storeData("offlineSettingInformation",t)}return Promise.resolve()}),(function(e){return r.error("getting offline settings faileed with error."),Promise.reject(e)}))}),(function(e){return r.error("preDbInitOfflineSettingUpgrader is Failed while Running Upgrade"),Promise.reject(e)})))}},{type:"offline.noncud.upgrade",execute:function(e,t,a){var n=t.TraceManager.getTracer("Offline");return parseInt(e.previousClientVersion,10)>=parseInt("9000000000",10)?(n.info("No need for offlineNonCudUpgrader as previous version >= 9.0"),Promise.resolve()):m(a,n).then((function(e){if(!e){var i=t.DataSource.get_UserContext(),o=Object(O.d)(a.getState());return!i.get_IsMocaOfflineFeatureEnabled()||Object(u.a)(o)||y.a.isNullOrEmpty(y.a.tryParse(o))?(n.info("offlineNonCudUpgrader Handler not run becasue either User is not enabled for offline or invalid database"),Promise.resolve()):t.OfflineProvider.initializeOfflineDataSource(i).nativePromise().then((function(){return M(a)}),(function(e){return Promise.reject(r.a.fromLegacyErrorStatus(e))}))}return n.info("offlineNonCudUpgrader not run because store is already updated for Upgrade"),Promise.resolve()}),(function(e){return n.error("offlineNonCudUpgrader is failed on while Upgrading."),Promise.reject(e)}))}},{type:"offline.playback",execute:function(e,t,a){var r=t.TraceManager.getTracer("Offline");return parseInt(e.previousClientVersion,10)>=parseInt("9000000000",10)?(r.info("No need for performPlaybackForOfflineActions as previous version >= 9.0"),Promise.resolve()):m(a,r).then((function(e){if(!e){var n=t.DataSource.get_UserContext(),i=Object(O.d)(a.getState());return!n.get_IsMocaOfflineFeatureEnabled()||Object(u.a)(i)||y.a.isNullOrEmpty(y.a.tryParse(i))?(r.info("performPlaybackForOfflineActions Upgrade Handler not run because either User is not enabled for offline or invalid database"),Promise.resolve()):a.dispatch(Object(v.initializeOfflineUpsyncProcessAsyncAction)())}return r.info("performPlaybackForOfflineActions not run because Store is already updated for Upgrade"),Promise.resolve()}),(function(e){return r.error("performPlaybackForOfflineActions is failed While Upgrading"),Promise.reject(e)}))}},{type:"preDbInit.personalization.upgrade",execute:function(e,t){return parseInt(e.previousClientVersion,10)>=parseInt("9000000000",10)?new Promise((function(e,t){e()})):t.DataSource.pullPersonalizations().nativePromise().then((function(t){e.storeData("personalizations",t)}))}},{type:"preDbInit.devicesetting.upgrade",execute:function(e,t,a){return new Promise((function(r,n){parseInt(e.previousClientVersion,10)>=parseInt("9000000000",10)?r():a.dispatch(Object(l.a)("deviceSettingInformation")).then((function(a){a?e.storeData("deviceSettingInformation",a):t.TraceManager.getTracer("DeviceIntegration").info("Legacy DeviceSetting Session Empty."),r()}),(function(e){n(e)}))}))}},{type:"datasource.upgrade",execute:function(e,t,a){return t.DataSource.upgrade().nativePromise().then((function(t){if(e.previousClientVersion===o.a)return a.dispatch({type:"update.entity.set.names.async",execute:function(e,t,a){var o=e.dispatch,s=(e.getState,t.DataSource.get_LocalDataSource());if(s)return s.RetrieveMultipleEntityMetadata(null).nativePromise().then((function(e){if(e.length){var t=e.map((function(e){return e.get_logicalName()})),a=[],u=0,c=0;for(u=0;u<t.length;u+=25){var f="",l=t.slice(u,u+25);for(c=0;c<l.length;c++)""!==f&&(f+=" or "),f=f+"LogicalName eq '"+l[c]+"'";var d={urlParameters:"EntityDefinitions?$select=LogicalName,EntitySetName&$filter="+f,additionalHeaders:{Accept:n.a},method:"GET"};a.push(d)}return o(Object(i.c)(a)).then((function(t){var a=[];return t.forEach((function(e){var t=Object(n.g)(e).then((function(e){return e.value})).catch(r.b);a.push(t)})),Promise.all(a).then((function(t){var a={};t.forEach((function(e){e.forEach((function(e){a[e.LogicalName]=e.EntitySetName}))}));for(var n=0,i=e;n<i.length;n++){var o=i[n];o.set_entitySetName(a[o.get_logicalName()])}return s.CreateMultipleEntityMetadata(e).nativePromise().catch(r.b)})).catch(r.b)})).catch(r.b)}})).catch(r.b)}})})).catch(r.b)}},{type:"postDbInit.personalization.upgrade",execute:function(e,t){var a=e.getData("personalizations");return a?t.DataSource.pushPersonalizations(a).nativePromise():Promise.resolve()}},{type:"postDbInit.devicesetting.upgrade",execute:function(e,t,a){var r=e.getData("deviceSettingInformation"),n={};if(r){var i={featureName:"camera",isEnabled:!r.CameraDiabled,imageRes:q(r.ImageRes),savePhoto:!r.PhotoSaveDisabled},o={featureName:"video",isEnabled:!r.DeviceAccessDisabled},s={featureName:"geolocation",isEnabled:!r.DeviceAccessDisabled};return n.camera=i,n.video=o,n.geolocation=s,a.dispatch(Object(R.a)("deviceSettingInformation",n,!1))}return new Promise((function(e,t){e()}))}},{type:"postDbInit.offlinesetting.upgrade",execute:function(e,t,a){var r=t.TraceManager.getTracer("Offline");return parseInt(e.previousClientVersion,10)>=parseInt("9000000000",10)?(r.info("No need for preDbInitOfflineSettingUpgrader as previous version >= 9.0"),Promise.resolve()):m(a,r).then((function(n){var i,o,s,u,l;if(!n){var p=e.getData("offlineSettingInformation");if(p){r.info("Found some legacy offline settings. Pushing data into session state.");var m=[],O=((i={})[d.a.norsyncServerConnectionStringKey]=p[d.a.norsyncServerConnectionStringKey].toString(),i[d.a.isTrialOrganizationKey]=p[d.a.isTrialOrganizationKey].toString(),i[d.a.isMocaOfflineFCBEnabledKey]=p[d.a.isMocaOfflineFCBEnabledKey].toString(),i),y=Object(f.a)(p[d.a.isMobileOfflineOptedInKey].toString()),v=Object(f.a)(p[d.a.isMobileOfflineOptedOutKey].toString()),S=y&&!v?g.a.Enabled:!y&&v?g.a.Disabled:g.a.Default;return m.push(t.DataSource.saveSessionState(d.a.OfflineProfileDataKey,p[d.a.OfflineProfileDataKey],!1)),m.push(t.DataSource.saveSessionState(d.a.offlineDatabaseInformationKey,O,!1)),m.push(t.DataSource.saveSessionState(d.a.isMobileOfflineOptedInKey,((o={})[d.a.isMobileOfflineOptedInKey]=S.toString(),o),!1)),m.push(t.DataSource.saveSessionState(d.a.OfflineDatabaseKey,((s={})[d.a.OfflineDatabaseKey]=p[d.a.OfflineDatabaseKey],s),!1)),m.push(t.DataSource.saveSessionState(d.a.OfflineDisabledInfoKey,p[d.a.OfflineDisabledInfoKey],!1)),m.push(t.DataSource.saveSessionState(d.a.MaxTimeKey,((u={})[d.a.MaxTimeKey]=p[d.a.MaxTimeKey],u),!1)),m.push(t.DataSource.saveSessionState(d.a.LastSuccessfulSaveOnCrmKey,p[d.a.LastSuccessfulSaveOnCrmKey],!1)),m.push(t.DataSource.saveSessionState(d.a.SyncErrorFailureMapKey,p[d.a.SyncErrorFailureMapKey],!1)),m.push(t.DataSource.saveSessionState(d.a.IsOfflineUpgradeDoneKey,((l={})[d.a.IsOfflineUpgradeDoneKey]=!0,l),!1)),Promise.all(m).then((function(){return r.info("Saved offline settings into session state successfully."),a.dispatch(Object(c.a)())}),(function(e){return r.error("Issue while stroing offline settings data into session state."),Promise.reject(e)}))}return r.info("Found no legacy offline settings while upgrade."),Promise.resolve()}return r.info("postDbInitOfflineSettingUpgrader not run because Store is already updated for Upgrade"),Promise.resolve()}),(function(e){return r.error("postDbInitOfflineSettingUpgrader is failed while running Upgrade."),Promise.reject(e)}))}},{type:"appmodule.upgrade",execute:function(e,t,a){if("8200000000"!==e.previousClientVersion)return Promise.resolve();var r=String.format("?$select=appmoduleid&$filter=uniquename eq '{0}' and clienttype eq {1}","mobilecustom",4);return new Promise((function(e,n){a.dispatch(Object(L.e)("appmodule",r)).then((function(t){if(t.value&&t.value.length){var r=t.value[0].appmoduleid,n={};n.appId=r,a.dispatch(Object(R.a)("LastAccessedApp",n,!1)),a.dispatch(Object(T.b)(r)),a.dispatch(Object(A.d)(new y.a(r))).then((function(){e()}))}else e()}),(function(a){t.EventManager.ReportComponentFailure("AppModuleUpgrader",a),e()}))}))}}];
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */function B(e,t,a,r){var n=t.TraceManager.getTracer("UpgradeHandler");return k.reduce((function(e,n,i){return e.then((function(){return n.execute(r,t,a)}))}),Promise.resolve()).then((function(){return n.info("Upgrade is successful from version '"+r.previousClientVersion+"' to '"+r.currentClientVersion+"'"),r}))}}}]),window.bundleExecutionMarkers["scripts/es5/upgraderunner.js?v=1.4.9962-v91onpremise"].end=window.performance.now(),window.reportBundleExecutionTimes&&window.reportBundleExecutionTimes();