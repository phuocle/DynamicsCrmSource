var ExcelFileType=3,CSVFileType=0,ImportFileUploadDialogOpenTime="Import.ImportFileUploadDialogOpenTime",ImportDataSettingDialogOpenTime="Import.ImportDataSettingDialogOpenTime",ImportMappingDialogOpenTime="Import.ImportMappingDialogOpenTime",dataDelimiter=0,fieldDelimiter=0,isFirstRowHeader=0,propertiesList=["id_ImportId","id_ImportFileName","id_ImportFileId","id_ImportFileSize","id_DataDelimiter","id_FieldDelimiter","id_IsFirstRowHeader","id_DataDelimiterTemplate","id_MapXml","id_MapChanged","id_DuplicateDetection","id_ImportType","id_DefaultOwner","id_DefaultOwnerType","id_HeaderColumnIndexesToBeIgnored"],parameterList=["id_ImportId","id_ImportFileName","id_ImportFileId","id_ImportFileSize","id_DataDelimiter","id_FieldDelimiter","id_IsFirstRowHeader","id_DataDelimiterTemplate","id_MapXml","id_MapChanged","id_DuplicateDetection","id_ImportType","id_DefaultOwner","id_DefaultOwnerType","id_HeaderColumnIndexesToBeIgnored","id_ImportFileType","id_EntityLogicalName","id_UpsertMode","id_EntityKey","id_EntityKeyAttributes"],oldMapxml=null,customErrorCode=1234,MapNodeIndex=0,EntityMapsNodeIndex=1,EntityMapNodeIndex=0,AttributeMapsNodeIndex=0,PicklistMapsNodeIndex=4,ProcessCodeIndex=3,TargetAttributeNameNodeIndex=2,PickListTargetValueNameNodeIndex=2,PickListTargetValueNodeIndex=1;function getFileDetails(){var importId=Xrm.Page.data.attributes.get("id_ImportId").getValue(),importType=Xrm.Page.data.attributes.get("id_ImportType").getValue(),entityLogicalName=Xrm.Page.data.attributes.get("id_EntityLogicalName").getValue(),importFileId=Xrm.Page.data.attributes.get("id_ImportFileId").getValue();return [importFileId,importType,entityLogicalName,importFileId]}function getDialogNameAndTimeSpent(dialogname,isback){result=[];previousDialogName="";timeSpentOnPreviousDialog=0;if(isback){if(dialogname=="ImportDataSettings"){var startTime=sessionStorage.getItem(ImportMappingDialogOpenTime);if(startTime){previousDialogName="ImportMapping";timeSpentOnPreviousDialog=(new Date).getTime()-startTime;sessionStorage.removeItem(ImportMappingDialogOpenTime)}}else if(dialogname=="ImportFileUpload"){var startTime=sessionStorage.getItem(ImportDataSettingDialogOpenTime);if(startTime){previousDialogName="ImportDataSettings";timeSpentOnPreviousDialog=(new Date).getTime()-startTime;sessionStorage.removeItem(ImportDataSettingDialogOpenTime)}}}else if(dialogname=="ImportDataSettings"){var startTime=sessionStorage.getItem(ImportFileUploadDialogOpenTime);if(startTime){previousDialogName="ImportFileUpload";timeSpentOnPreviousDialog=(new Date).getTime()-startTime;sessionStorage.removeItem(ImportFileUploadDialogOpenTime)}}else if(dialogname=="ImportMapping"){var startTime=sessionStorage.getItem(ImportDataSettingDialogOpenTime);if(startTime){previousDialogName="ImportDataSettings";timeSpentOnPreviousDialog=(new Date).getTime()-startTime;sessionStorage.removeItem(ImportDataSettingDialogOpenTime)}}if(previousDialogName!=""){result.push(previousDialogName);result.push(timeSpentOnPreviousDialog)}return result}function upsertAttributesRequest(){var wizardData=constructPostData(propertiesList),UpsertMode=Xrm.Page.data.attributes.get("id_UpsertMode").getValue(),EntityKeyId=Xrm.Page.data.attributes.get("id_EntityKey").getValue();function UpdateUpsertAttributesRequest(wizardData,UpsertMode,EntityKeyId){this.WizardDataXml=wizardData;this.UpsertModeCode=UpsertMode;this.EntityKeyId=EntityKeyId;UpdateUpsertAttributesRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{WizardDataXml:{typeName:"Edm.String",structuralProperty:1},UpsertModeCode:{typeName:"Edm.Int32",structuralProperty:1},EntityKeyId:{typeName:"Edm.String",structuralProperty:1}},operationType:0,operationName:"UpdateUpsertAttributes"}}}var updateUpsertAttributesRequest=new UpdateUpsertAttributesRequest(wizardData,UpsertMode,EntityKeyId);return updateUpsertAttributesRequest}function reviewMapping(data){var params={};populateDelimiterVariables();var upsertData=upsertAttributesRequest();sdkExecuteHelper(upsertData,function(response){var datawhoamI=whoAmIRequest();sdkExecuteHelper(datawhoamI,function(response){params["id_DefaultOwner"]=response["UserId"];params["id_DefaultOwnerType"]="8";console.log(response["UserId"]);var mapXml=Xrm.Page.data.attributes.get("id_MapXml");if(mapXml.getValue()==null||mapXml.getValue()==""){var datamap=getImportMapXml(propertiesList);sdkExecuteHelper(datamap,function(response){params["id_MapXml"]=response["importMapXml"];sessionStorage.setItem("ForceReload","true");oldMapxml=params["id_MapXml"];console.log(response["importMapXml"]);openDialog("ImportMapping",700,800,params,false)},"GetImportMapXml")}else{console.log(mapXml.getValue());openDialog("ImportMapping",700,800,params,false)}},"WhoAmI")},"UpdateUpsertAttributes")}function importFileUploadOnLoad(){var importFileType=Xrm.Page.data.attributes.get("id_ImportFileType"),fileType=ExcelFileType;if(importFileType!=null&&importFileType.getValue()!=null)fileType=importFileType.getValue();var header=Xrm.Page.ui.controls.get("formheader");if(fileType==ExcelFileType)header.setLabel(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_ImportFromExcel"));else header.setLabel(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_ImportFromCSV"));sessionStorage.setItem(ImportFileUploadDialogOpenTime,(new Date).getTime())}function importFileLogOnLoad(){if(Xrm.Internal.isUci()){Xrm.Page.ui.tabs.get("failureTab").setVisible(true);Xrm.Page.ui.tabs.get("successTab").setVisible(true);Xrm.Page.ui.tabs.get("partialFailureTab").setVisible(true);setRecordTypeValue()}}function setRecordTypeValue(){var baseUrl=Xrm.Page.context.getClientUrl(),requesturl=baseUrl+"/api/data/v8.0/EntityDefinitions(LogicalName='"+Xrm.Page.ui.controls.get("targetentityname").getValue()+"')?$select=LogicalName,DisplayName",data=null,xmlHttp=new XMLHttpRequest;xmlHttp.onreadystatechange=function(){if(xmlHttp.readyState==4&&xmlHttp.status==200){data=JSON.parse(xmlHttp.responseText);if(data!=null)Xrm.Page.ui.controls.get("targetentityname").getValueInternal().value=data.DisplayName.UserLocalizedLabel.Label}};xmlHttp.open("GET",requesturl,true);xmlHttp.send(null)}function ExportErrorRowDownload(importlogrecordNameHeader,recordcollection){var uniqueLogs={},lineNumbers=[],counter=0;for(count=0;count<recordcollection.entities.length;count++)if(lineNumbers.lastIndexOf(recordcollection.entities[count].linenumber)===-1){lineNumbers.push(recordcollection.entities[count].linenumber);uniqueLogs[counter++]=recordcollection.entities[count]["_importdataid_value@OData.Community.Display.V1.FormattedValue"]}var errorFileName=importlogrecordNameHeader.name+" - Errors";errorFileName=errorFileName.replace(/[./\\:*?"|<>]/g," ");errorFileName=errorFileName+".csv";var content=importlogrecordNameHeader.headerrow;for(count=0;count<counter;count++)content=content+"\n"+uniqueLogs[count];var file={fileContent:btoa(unescape(encodeURIComponent(content))),fileName:errorFileName,mimeType:"application/csv"};Xrm.Reporting.reportSuccess("exportErrors");Xrm.Navigation.openFile(file,{openMode:2})}function createImportDataFetchXml(importFileId){var fetchXml="?fetchXml=<fetch version='1.0' mapping='logical' distinct='false'><entity name= 'importlog'><attribute name='importdataidname' /><attribute name='linenumber' /><attribute name='importdataid' /><attribute name='importlogid' />  <link-entity name='importfile' from='importfileid' to='importfileid' alias='importfile2' link-type='inner'><filter type='and'><condition attribute='importfileid' operator='eq' value='"+importFileId+"' /></filter><link-entity name='import' from='importid' to='importid' alias='import3' link-type='inner'></link-entity></link-entity><order attribute='linenumber' descending='false' /><order attribute='importlogid' descending='false' /><order attribute='importfileid' descending='false' /></entity></fetch>";return fetchXml}function exportErrors(importFileId,gridRecordsNumber){var file;if(gridRecordsNumber>0){importFileId=importFileId.slice(1,-1);Xrm.WebApi.retrieveRecord("importfile",importFileId,"?$select=name,headerrow").then(function(response){var fetchXml=createImportDataFetchXml(importFileId);Xrm.WebApi.retrieveMultipleRecords("importlog",fetchXml).then(function(collection){this.ExportErrorRowDownload(response,collection)})})}else{var alert={text:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_NoErrorRowsFoundInThisImport")};Xrm.Navigation.openAlertDialog(alert);return}}function importSettingsOnLoad(data){sessionStorage.setItem(ImportDataSettingDialogOpenTime,(new Date).getTime());var importFileType=Xrm.Page.data.attributes.get("id_ImportFileType"),fileType=ExcelFileType;if(importFileType!=null)fileType=importFileType.getValue()}function importMappingOnLoad(){var importFileType=Xrm.Page.data.attributes.get("id_ImportFileType");sessionStorage.setItem(ImportMappingDialogOpenTime,(new Date).getTime());var fileType=ExcelFileType;if(importFileType!=null)fileType=importFileType.getValue()}function importFileUploadClose(context){var startTime=sessionStorage.getItem(ImportFileUploadDialogOpenTime);if(startTime){var fileParams=getFileDetails();Xrm.Reporting.reportSuccess("Import.ImportFileUpload.TimeSpent",[{name:"Direction",value:"Back"},{name:"TimeSpent",value:(new Date).getTime()-startTime},{name:"ImportFileId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]},{name:"EntityLogicalName",value:fileParams[2]}]);sessionStorage.removeItem(ImportFileUploadDialogOpenTime)}Xrm.Page.ui.close()}function bytesToSize(bytes){var sizes=[Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_FileSizeInBytes"),Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_FileSizeInKB"),Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_FileSizeInMB"),Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_FileSizeInGB"),Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_FileSizeInTB")];if(bytes==0)return "0 Byte";var i=parseInt(Math.floor(Math.log(bytes)/Math.log(1024)));return Math.round(bytes/Math.pow(1024,i),2)+" "+sizes[i]}function isValidFile(importfileTypeExpected,importfileTypeUploaded){if(importfileTypeUploaded==undefined)return false;if(importfileTypeExpected==0){if(importfileTypeUploaded.toLowerCase()=="csv")return true}else if(importfileTypeExpected==3)if(importfileTypeUploaded.toLowerCase()=="xlsx")return true;return false}function uploadfile(context){var fileContent=Xrm.Page.data.attributes.get("importfile_id").getValue(),fileName=Xrm.Page.data.attributes.get("id_ImportFileName").getValue(),importfileTypeExpected=Xrm.Page.data.attributes.get("id_ImportFileType").getValue(),importfileTypeUploaded=/[.]/.exec(fileName)?/[^.]+$/.exec(fileName)[0]:undefined,isValidFileType=isValidFile(importfileTypeExpected,importfileTypeUploaded),isFileContentValid=Xrm.Page.data.attributes.get("importfile_id").isValid();if(fileName==null||fileName==undefined||fileName==""){var errorMessage={message:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_NoFileSelected")},fileParams=getFileDetails();Xrm.Reporting.reportFailure("Import.NoFileError",errorMessage,"",[{name:"FunctionName",value:"ImportExport_library.uploadfile"},{name:"Error",value:errorMessage},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}]);Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_NoFileSelected")});return}if(isValidFileType==false){var errorMessage={message:"Invalid file format"},fileParams=getFileDetails();Xrm.Reporting.reportFailure("Import.InvalidFileFormatError",errorMessage,"",[{name:"FunctionName",value:"ImportExport_library.uploadfile"},{name:"Error",value:errorMessage},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}]);Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_InvalidFileFormat")});return}if(isFileContentValid==false){var errorMessage={message:"Selected File size exceeds max allowed size limit."},fileParams=getFileDetails();Xrm.Reporting.reportFailure("Import.FileSizeMaxLimitExceeded",errorMessage,"",[{name:"FunctionName",value:"ImportExport_library.uploadfile"},{name:"Error",value:errorMessage},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}]);Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_FileSizeMaxLimitExceeded")});return}if(fileContent==null||fileContent==undefined||fileContent==""){var errorMessage={message:"Selected File contains no data."},fileParams=getFileDetails();Xrm.Reporting.reportFailure("Import.EmptyFileError",errorMessage,"",[{name:"FunctionName",value:"ImportExport_library.uploadfile"},{name:"Error",value:errorMessage},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}]);Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_NoDataInFile")});return}function ImportFileUploadRequest(fileContent,fileName){this.FileContent=fileContent;this.FileName=fileName;ImportFileUploadRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{FileContent:{typeName:"Edm.String",structuralProperty:1},FileName:{typeName:"Edm.String",structuralProperty:1}},operationType:0,operationName:"ImportFileUpload"}}}var importFileUploadRequest=new ImportFileUploadRequest(fileContent,fileName),fileType=Xrm.Page.data.attributes.get("id_ImportFileType").getValue(),entityLogicalName=Xrm.Page.data.attributes.get("id_EntityLogicalName").getValue(),params={};sdkExecuteHelper(importFileUploadRequest,function(data){params["id_DataDelimiter"]=data.DataDelimiter.toString();params["id_FieldDelimiter"]=data.DataDelimiter.toString();params["id_DataDelimiterTemplate"]=data.DataDelimiter.toString();params["id_IsFirstRowHeader"]=true;params["id_HeaderColumnIndexesToBeIgnored"]=data.HeaderColumnIndexesToBeIgnoredCsv;params["id_ImportFileId"]=data.ImportFileId;params["id_ImportId"]=data.ImportId;params["id_ImportType"]=data.ImportType;params["id_ImportFileSize"]=bytesToSize(.75*fileContent.length);if(entityLogicalName=="activitypointer")entityLogicalName=data.EntityLogicalName;if(fileType==ExcelFileType)if(data.EntityLogicalName!=null)if(data.EntityLogicalName!=entityLogicalName){var entityLabel=Xrm.Page.data.attributes.get("id_EntityLabel"),entityLabelValue="";if(entityLabel!=null){entityLabelValue=entityLabel.getValue();if(entityLabelValue!=null)Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:String.format(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_InvalidFileSubmitted"),entityLabelValue)});else Xrm.Utility.getEntityMetadata(entityLogicalName).then(function(responsedata){if(responsedata!=null)entityLabelValue=responsedata.DisplayName;Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:String.format(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_InvalidFileSubmitted"),entityLabelValue)})},function(error){Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:String.format(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_InvalidFileSubmitted"),entityLabelValue)})})}else Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:String.format(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_InvalidFileSubmitted"),entityLabelValue)});var errorMessage={message:String.format(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_InvalidFileSubmitted"),entityLabelValue)},fileParams=getFileDetails();Xrm.Reporting.reportFailure("Import.FileTypeError",errorMessage,"",[{name:"FunctionName",value:"ImportExport_library.uploadfile"},{name:"Error",value:errorMessage},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}]);return}Xrm.Reporting.reportSuccess("Import.FileUpload",[{name:"ImportFileId",value:params["id_ImportFileId"]},{name:"ImportType",value:params["id_ImportType"]},{name:"ImportFileSize",value:params["id_ImportFileSize"]},{name:"EntityLogicalName",value:Xrm.Page.data.attributes.get("id_EntityLogicalName").getValue()}]);openDialog("ImportDataSettings",600,600,params,false)},"fileUploadData")}function importSettingsBack(data){openDialog("ImportFileUpload",600,600,null,true)}function openDialog(dialogname,width,height,dialogParams,isback){var params=dialogParams==null?{}:dialogParams,previousDialogData=getDialogNameAndTimeSpent(dialogname,isback);if(previousDialogData.length==2){var fileParams=getFileDetails();Xrm.Reporting.reportSuccess("Import."+previousDialogData[0]+".TimeSpent",[{name:"Direction",value:isback?"Back":"Forward"},{name:"TimeSpent",value:previousDialogData[1]},{name:"ImportFileId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]},{name:"EntityLogicalName",value:fileParams[2]}])}for(var i=0;i<parameterList.length;i++)if(params[parameterList[i]]==null&&Xrm.Page.data.attributes.get(parameterList[i])!=null&&Xrm.Page.data.attributes.get(parameterList[i]).getValue()!=null)params[parameterList[i]]=Xrm.Page.data.attributes.get(parameterList[i]).getValue();var isMultipage=Xrm.Page.ui.tabs.getAll().length>1;if(isMultipage){for(key in dialogParams)if(Xrm.Page.data.attributes.get(key)!=null)if(Xrm.Page.data.attributes.get(key).getAttributeType()=="string")Xrm.Page.data.attributes.get(key).setValue(dialogParams[key].toString());else Xrm.Page.data.attributes.get(key).setValue(dialogParams[key]);var importFileType=Xrm.Page.data.attributes.get("id_ImportFileType");if(importFileType!=null&&importFileType.getValue()!=null)fileType=importFileType.getValue();if(isback)if(fileType==ExcelFileType){dialogname=="ImportDataSettings"&&Xrm.Page.ui.moveTo("Import Data Template tab");dialogname=="ImportFileUpload"&&Xrm.Page.ui.moveTo("Import File Upload tab")}else{dialogname=="ImportFileUpload"&&Xrm.Page.data.attributes.get("id_MapXml").setValue(null);Xrm.Page.ui.movePrevious()}else if(fileType==ExcelFileType){dialogname=="ImportDataSettings"&&Xrm.Page.ui.moveTo("Import Data Template tab");dialogname=="ImportMapping"&&Xrm.Page.ui.moveTo("Import mapping tab")}else Xrm.Page.ui.moveTo(Xrm.Page.ui.taskProcess.getDefaultNextPageName());return}Xrm.Page.ui.close();Xrm.Navigation.openDialog(dialogname,{width:width,height:height,position:2},params)}function backToDelimiter(data){openDialog("ImportDataSettings",600,600,null,true)}function datasettingssubmitImportJob(){var params={};Xrm.Page.data.attributes.get("id_DataDelimiterTemplate").getValue()!=null&&Xrm.Page.data.attributes.get("id_DataDelimiter").setValue(Xrm.Page.data.attributes.get("id_DataDelimiterTemplate").getValue());Xrm.Page.data.attributes.get("id_IsMandatoryFieldValid").setValue("true");var upsertData=upsertAttributesRequest();sdkExecuteHelper(upsertData,function(response){var datawhoamI=whoAmIRequest();sdkExecuteHelper(datawhoamI,function(response){params["id_DefaultOwner"]=response["UserId"];params["id_DefaultOwnerType"]="8";Xrm.Page.data.attributes.get("id_DefaultOwner").setValue(response["UserId"]);Xrm.Page.data.attributes.get("id_DefaultOwnerType").setValue("8");console.log(response["UserId"]);var mapXml=Xrm.Page.data.attributes.get("id_MapXml");if(mapXml.getValue()==null||mapXml.getValue()==""){var datamap=getImportMapXml(propertiesList);sdkExecuteHelper(datamap,function(response){params["id_MapXml"]=response["importMapXml"];oldMapxml=params["id_MapXml"];console.log(response["importMapXml"]);Xrm.Page.data.attributes.get("id_MapXml").setValue(oldMapxml);submitImportJob()},"GetImportMapXml")}else{console.log(mapXml.getValue());submitImportJob()}},"WhoAmI")},"UpdateUpsertAttributes")}function SubmitData(mapxml){hasMapChanged(mapxml);var importWizardData=constructPostData(propertiesList);function SubmitImportJobRequest(importWizardData){this.ImportWizardXml=importWizardData;SubmitImportJobRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{ImportWizardXml:{typeName:"Edm.String",structuralProperty:1}},operationType:0,operationName:"SubmitImportJob"}}}var submitImportJobRequest=new SubmitImportJobRequest(importWizardData);sdkExecuteHelper(submitImportJobRequest,function(data){Xrm.Reporting.reportSuccess("Import.FileSubmit",[{name:"ImportFileId",value:Xrm.Page.data.attributes.get("id_ImportFileId").getValue()}]);console.log(data);var importMapName=Xrm.Page.data.attributes.get("id_ImportMapName").getValue();importMapName!=null&&Xrm.WebApi.updateRecord("importmap",data["ImportStatus"],{name:importMapName.trim(),importmaptype:1});next_tab()},"SubmitImportJob");var startTime=sessionStorage.getItem(ImportMappingDialogOpenTime);if(startTime){var fileParams=getFileDetails();Xrm.Reporting.reportSuccess("Import.ImportMapping.TimeSpent",[{name:"Direction",value:"Forward"},{name:"TimeSpent",value:(new Date).getTime()-startTime},{name:"ImportFileId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]},{name:"EntityLogicalName",value:fileParams[2]}]);sessionStorage.removeItem(ImportMappingDialogOpenTime)}}function finalsubmitImportJob(mapxml){var isMandatoryFieldValid=Xrm.Page.data.attributes.get("id_IsMandatoryFieldValid").getValue(),mapxml=Xrm.Page.data.attributes.get("id_MapXml").getValue(),pos=mapxml.search("Unmapped");if(pos>=0||isMandatoryFieldValid==false){var importFileType=Xrm.Page.data.attributes.get("id_ImportFileType"),confirmDialogOptions={height:220,width:600},confirmationDialogText=null;if(pos>=0&&isMandatoryFieldValid==false)confirmationDialogText=Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_MandatoryAndOptionalUnmappedFieldConfimationDialog");else if(pos>=0)confirmationDialogText=Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_OptionalUnmappedFieldConfimationDialog");else if(isMandatoryFieldValid==false)confirmationDialogText=Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_MandatoryUnmappedFieldConfimationDialog");var confirmDialogStrings={title:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_UnmappedFieldConfimationDialogTitle"),text:confirmationDialogText,confirmButtonLabel:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_Confirm"),cancelButtonLabel:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_Cancel")};Xrm.Navigation.openConfirmDialog(confirmDialogStrings,confirmDialogOptions).then(function(response){if(response.confirmed){var msg="All the fields in the entity are not mapped, Ignoring the UnMapped Fields and Submitting the Data",fileParams=getFileDetails();Xrm.Reporting.reportSuccess("Import.ImportMapping",[{name:"FunctionName",value:"ImportExport_library.finalsubmitImportJob"},{name:"IgnoreUnmappedEntities/Fields",value:msg},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}]);SubmitData(mapxml)}},function(err){if(fileType==ExcelFileType){params={};openDialog("ImportMapping",700,800,params,false)}else return})}else SubmitData(mapxml)}function submitImportJob(data){var mapxml=Xrm.Page.data.attributes.get("id_MapXml").getValue();if(mapxml.search("<ProcessCode>Create</ProcessCode>")>-1&&mapxml.search("<PicklistMaps>")>-1)insertPickListValues(mapxml);else finalsubmitImportJob(mapxml)}function getImportMapXml(propertiesList){var mapXml=Xrm.Page.data.attributes.get("id_MapXml"),importFileType=Xrm.Page.data.attributes.get("id_ImportFileType"),fileType=ExcelFileType;if(importFileType!=null)fileType=importFileType.getValue();var wizardDataXml=mapXml.getValue()==null&&fileType==CSVFileType?constructPostData(propertiesList,constructMapXml()):constructPostData(propertiesList);function GetImportMapXmlRequest(importWizardData){this.wizardDataXml=importWizardData;GetImportMapXmlRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{wizardDataXml:{typeName:"Edm.String",structuralProperty:1}},operationType:0,operationName:"GetImportMapXml"}}}var getImportMapXmlRequest=new GetImportMapXmlRequest(wizardDataXml);return getImportMapXmlRequest}function whoAmIRequest(){function WhoAmIReq(){WhoAmIReq.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{},operationType:1,operationName:"WhoAmI"}}}var whoAmI=new WhoAmIReq;return whoAmI}function sdkExecute(sdkRequest){return Xrm.WebApi.online.execute(sdkRequest).then(function(response){if(response.ok)return response.json()},function(err){throw err})}function sdkExecuteWrapper(sdkRequest,callback,callbackerror,sdkName){sdkExecute(sdkRequest).then(function(response){callback(response)},function(err){callbackerror(err)})}function sdkExecuteHelper(sdkRequest,callback,sdkName){var fileParams=getFileDetails();sdkExecuteWrapper(sdkRequest,function(response){Xrm.Reporting.reportSuccess("Import.SDKExecuteSuccess",[{name:"SdkName",value:sdkName},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportFileId",value:fileParams[3]},{name:"ImportType",value:fileParams[1]}]);callback(response)},function(err){var errorMessage;if(err.message&&err.message!=null&&err.message!="")errorMessage=err.message;else if(err.innerror&&err.innerror.message&&err.innerror.message!=null&&err.innerror.message!="")errorMessage=err.innerror.message;else errorMessage=Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_UnknownFailures");Xrm.Navigation.openErrorDialog({errorCode:err.errorCode,message:errorMessage});Xrm.Reporting.reportFailure("Import.SDKExecuteError",err,"",[{name:"SdkName",value:sdkName},{name:"Error",value:err.innerror.message},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}])},sdkName)}function constructPostData(propertiesList,mapXml){for(var postData='<?xml version="1.0"?><ImportWizardData>',i=0;i<propertiesList.length;i++){var property=propertiesList[i];console.log(property);if(Xrm.Page.data.attributes.get(property)!=null){var propertyValue=Xrm.Page.data.attributes.get(property).getValue();if(propertyValue==null)if(property=="id_MapXml"&&mapXml!=null)propertyValue=mapXml;else if(property=="id_DuplicateDetection")if(fileType==ExcelFileType&&Xrm.Page.getControl("allowDuplicatesInXlsx")!=null&&Xrm.Page.getControl("allowDuplicatesInXlsx").getAttribute()!=null)propertyValue=Xrm.Page.getControl("allowDuplicatesInXlsx").getAttribute().getValue()==0?true:false;else if(fileType==CSVFileType&&Xrm.Page.getControl("allowDuplicatesInCSV")!=null&&Xrm.Page.getControl("allowDuplicatesInCSV").getAttribute()!=null)propertyValue=Xrm.Page.getControl("allowDuplicatesInCSV").getAttribute().getValue()==0?true:false;else propertyValue=true;else continue;postData=postData+"<"+property.substring(3)+">"+propertyValue+"</"+property.substring(3)+">"}}postData=postData+"</ImportWizardData>";postData=postData.replace(/\"/g,'"');postData=postData.replace(/&(?!amp;)/g,"&amp;");return postData}function populateDelimiterVariables(){var dataDelimiterAttribute=Xrm.Page.data.attributes.get("id_DataDelimiter"),fieldDelimiterAttribute=Xrm.Page.data.attributes.get("id_FieldDelimiter"),isFirstRowHeaderAttribute=Xrm.Page.data.attributes.get("id_IsFirstRowHeader");if(dataDelimiterAttribute!=null&&dataDelimiterAttribute.getValue()!=null&&dataDelimiterAttribute.getValue()!=dataDelimiter){dataDelimiter=dataDelimiterAttribute.getValue();Xrm.Page.data.attributes.get("id_MapXml").setValue(null)}if(fieldDelimiterAttribute!=null&&fieldDelimiterAttribute.getValue()!=null&&fieldDelimiterAttribute.getValue()!=fieldDelimiter){fieldDelimiter=fieldDelimiterAttribute.getValue();Xrm.Page.data.attributes.get("id_MapXml").setValue(null)}if(isFirstRowHeaderAttribute!=null&&isFirstRowHeaderAttribute.getValue()!=null&&isFirstRowHeaderAttribute.getValue()!=isFirstRowHeader){isFirstRowHeader=isFirstRowHeaderAttribute.getValue();Xrm.Page.data.attributes.get("id_MapXml").setValue(null)}}function constructMapXml(){var date=new Date,dateTimeTicks=date.getTime()*1e4+6.21355968e17,inputFileName=Xrm.Page.data.attributes.get("id_ImportFileName").getValue(),sourceEntityName=inputFileName.substr(0,inputFileName.lastIndexOf("."))||inputFileName,targetEntityName=Xrm.Page.data.attributes.get("id_EntityLogicalName").getValue(),mapXml='<Map Name="Modified_Automatic Mapping ('+dateTimeTicks+')" Source="Import">\t\t\t<Description>Data map created automatically using the map settings specified during an import.</Description>\t\t\t<EntityMaps>\t\t\t\t<EntityMap InputFileName="'+inputFileName+'" InputFileId="file_1" SourceEntityName="'+sourceEntityName+'" ProcessCode="Process" TargetEntityName="'+targetEntityName+'"/>\t\t\t</EntityMaps>\t\t</Map>';return mapXml}function next_tab(){var importFileType=Xrm.Page.data.attributes.get("id_ImportFileType");if(importFileType!=null&&importFileType.getValue()!=null)fileType=importFileType.getValue();if(fileType==ExcelFileType)Xrm.Page.ui.moveTo("Import Finish tab");else Xrm.Page.ui.moveTo(Xrm.Page.ui.taskProcess.getDefaultNextPageName())}function ScheduleExchangeImportRequest(sysGUID){function ScheduleExchangeContactsImportRequest(userID){this.SystemUserId=userID;ScheduleExchangeContactsImportRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{SystemUserId:{typeName:"Edm.String",structuralProperty:1}},operationType:0,operationName:"ScheduleExchangeContactsImport"}}}var getImportScheduleImportRequestData=new ScheduleExchangeContactsImportRequest(sysGUID);return getImportScheduleImportRequestData}function import_exchangedata(data){var sysGuid=Xrm.Page.context.getUserId(),scheduleImport=ScheduleExchangeImportRequest(sysGuid);sdkExecuteWrapper(scheduleImport,function(response){console.log(response);Xrm.Page.ui.moveTo(Xrm.Page.ui.taskProcess.getDefaultNextPageName())},function(err){Xrm.Navigation.openErrorDialog({errorCode:err.errorCode,message:String.format(Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_ImportFromExchangeFailed"),err.innerror.message)})},"ScheduleExchangeContactsImport")}function close_dialog(data){Xrm.Page.ui.close()}function hasMapChanged(mapxml){if(mapxml.localeCompare(oldMapxml)!=0)Xrm.Page.data.attributes.get("id_MapChanged").setValue("true");else Xrm.Page.data.attributes.get("id_MapChanged").setValue("false")}function XMLToString(xmlData){var xmlString;if(window.ActiveXObject)xmlString=xmlData.xml;else xmlString=(new XMLSerializer).serializeToString(xmlData);return xmlString}function StringToXML(oString){if(window.ActiveXObject){var oXML=new ActiveXObject("Microsoft.XMLDOM");oXML.loadXML(oString);return oXML}else return (new DOMParser).parseFromString(oString,"text/xml")}function GetGuid(){var Guid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=="x"?r:r&3|8;return v.toString(16)});return Guid}function GetInsertOptionValue(optionSetName,attributeLogicalName,entityLogicalName,value,label,description,parentvalues,solutionUniqueName){function InsertOptionValueRequest(optionSetName,attributeLogicalName,entityLogicalName,value,label,description,parentvalues,solutionUniqueName){this.OptionSetName=optionSetName;this.AttributeLogicalName=attributeLogicalName;this.EntityLogicalName=entityLogicalName;this.Value=value;this.Label=label;this.Description=description;this.ParentValues=parentvalues;this.SolutionUniqueName=solutionUniqueName;InsertOptionValueRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{OptionSetName:{typeName:"Edm.String",structuralProperty:1},AttributeLogicalName:{typeName:"Edm.String",structuralProperty:1},EntityLogicalName:{typeName:"Edm.String",structuralProperty:1},Value:{typeName:"Edm.Int32",structuralProperty:1},Label:{typeName:"Microsoft.Dynamics.CRM.Label",structuralProperty:2},Description:{typeName:"Microsoft.Dynamics.CRM.Label",structuralProperty:2},ParentValues:{typeName:"Edm.Int32",structuralProperty:4},SolutionUniqueName:{typeName:"Edm.String",structuralProperty:1}},operationType:0,operationName:"InsertOptionValue"}}}var insertOptionValueRequest=new InsertOptionValueRequest(optionSetName,attributeLogicalName,entityLogicalName,value,label,description,parentvalues,solutionUniqueName);return insertOptionValueRequest}function GetLocalizedLabel(label,languageCode,isManaged,metadataId,hasChanged){function LocalizedLabelRequest(Label,LanguageCode,IsManaged,MetadataId,HasChanged){this.Label=label;this.LanguageCode=languageCode;this.IsManaged=isManaged;this.MetadataId=metadataId;this.HasChanged=hasChanged;LocalizedLabelRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{Label:{typeName:"Edm.String",structuralProperty:1},LanguageCode:{typeName:"Edm.Int32",structuralProperty:1},IsManaged:{typeName:"Edm.Boolean",structuralProperty:1},MetadataId:{typeName:"Edm.String",structuralProperty:1},HasChanged:{typeName:"Edm.Boolean",structuralProperty:1}},operationType:null,operationName:null}}}var localizedlabelrequest=new LocalizedLabelRequest(label,languageCode,isManaged,metadataId,hasChanged);return localizedlabelrequest}function GetLabel(locLabels,userLabel){function LabelRequest(locLabels,userLabel){this.LocalizedLabels=locLabels;this.UserLocalizedLabel=userLabel;LabelRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{LocalizedLabels:{typeName:"Microsoft.Dynamics.CRM.LocalizedLabel",structuralProperty:4},UserLocalizedLabel:{typeName:"Microsoft.Dynamics.CRM.LocalizedLabel",structuralProperty:2},operationType:null,operationName:null}}}}var labelrequest=new LabelRequest(locLabels,userLabel);return labelrequest}function insertPickListValues(mapXML){for(var entity=Xrm.Page.data.attributes.get("id_EntityLogicalName").getValue(),LanguageCode=Xrm.Page.context.getOrgLcid(),IsManaged=true,MetadataId=GetGuid(),HasChanged=false,picklistvalue=[],attributename=[],k=0,mapxml=StringToXML(mapXML),AttributeMaps=mapxml.childNodes[MapNodeIndex].childNodes[EntityMapsNodeIndex].childNodes[EntityMapNodeIndex].childNodes[AttributeMapsNodeIndex],i=0;i<AttributeMaps.childElementCount;i++){var node=AttributeMaps.childNodes[i];if(node.childElementCount>PicklistMapsNodeIndex&&node.childNodes[PicklistMapsNodeIndex].nodeName=="PicklistMaps")for(var j=0;j<node.childNodes[PicklistMapsNodeIndex].childElementCount;j++)if(node.childNodes[PicklistMapsNodeIndex].childNodes[j].childNodes[ProcessCodeIndex].nodeName=="ProcessCode"&&node.childNodes[PicklistMapsNodeIndex].childNodes[j].childNodes[ProcessCodeIndex].textContent=="Create"){attributename[k]=node.childNodes[TargetAttributeNameNodeIndex].textContent;picklistvalue[k]=node.childNodes[PicklistMapsNodeIndex].childNodes[j].childNodes[PickListTargetValueNameNodeIndex].textContent;k++}}console.log(picklistvalue);console.log(attributename);for(var InsertOptionValueRequests=[],i=0;i<picklistvalue.length;i++){var HasChanged=false,localizedLabel=GetLocalizedLabel(picklistvalue[i],LanguageCode,IsManaged,MetadataId,HasChanged);localizedLabels=[];localizedLabels.push(localizedLabel);var lbl=GetLabel(localizedLabels,localizedLabel),descrip=GetLabel(localizedLabels,localizedLabel),parentvalues=[];InsertOptionValueRequests[i]=GetInsertOptionValue("",attributename[i],entity,null,lbl,descrip,parentvalues,"Default")}sdkExecuteMultipleHelper(InsertOptionValueRequests,function(response){console.log(response);for(var k=0,mapxml=StringToXML(Xrm.Page.data.attributes.get("id_MapXml").getValue()),AttributeMaps=mapxml.childNodes[MapNodeIndex].childNodes[EntityMapsNodeIndex].childNodes[EntityMapNodeIndex].childNodes[AttributeMapsNodeIndex],i=0;i<AttributeMaps.childElementCount;i++){var node=AttributeMaps.childNodes[i];if(node.childElementCount>PicklistMapsNodeIndex&&node.childNodes[PicklistMapsNodeIndex].nodeName=="PicklistMaps")for(var j=0;j<node.childNodes[PicklistMapsNodeIndex].childElementCount;j++)if(node.childNodes[PicklistMapsNodeIndex].childNodes[j].childNodes[ProcessCodeIndex].nodeName=="ProcessCode"&&node.childNodes[PicklistMapsNodeIndex].childNodes[j].childNodes[ProcessCodeIndex].textContent=="Create"){node.childNodes[PicklistMapsNodeIndex].childNodes[j].childNodes[PickListTargetValueNodeIndex].textContent=response[k].NewOptionValue;node.childNodes[PicklistMapsNodeIndex].childNodes[j].childNodes[ProcessCodeIndex].textContent="Process";k++}AttributeMaps.childNodes[i]=node}mapxml.childNodes[MapNodeIndex].childNodes[EntityMapsNodeIndex].childNodes[EntityMapNodeIndex].childNodes[AttributeMapsNodeIndex]=AttributeMaps;Xrm.Page.data.attributes.get("id_MapXml").setValue(XMLToString(mapxml));finalsubmitImportJob(Xrm.Page.data.attributes.get("id_MapXml").getValue())},"GetInsertOptionValue",true)}function sdkExecuteMultipleHelper(sdkRequest,callback,sdkName,getFileDetail){if(getFileDetail)var fileParams=getFileDetails();sdkExecuteMultiple(sdkRequest,getFileDetail).then(function(response){getFileDetail&&Xrm.Reporting.reportSuccess("Import.SDKExecuteSuccess",[{name:"SdkName",value:sdkName},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportFileId",value:fileParams[3]},{name:"ImportType",value:fileParams[1]}]);for(var isBoolean,errorMessage,i=0;i<response.length;i++)if(response[i].error){isBoolean=true;if(response[i].error.innerror&&response[i].error.innerror.message&&response[i].error.innerror.message!=null&&response[i].error.innerror.message!="")errorMessage=response[i].error.innerror.message;else if(response[i].error.message&&response[i].error.message!=null&&response[i].error.message!="")errorMessage=response[i].error.message;else errorMessage=Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_UnknownFailures")}if(isBoolean)Xrm.Navigation.openErrorDialog({errorCode:customErrorCode,message:errorMessage});else callback(response)},function(err){var errorMessage;if(err.innerror&&err.innerror.message&&err.innerror.message!=null&&err.innerror.message!="")errorMessage=err.innerror.message;else if(err.message&&err.message!=null&&err.message!="")errorMessage=err.message;else errorMessage=Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_UnknownFailures");Xrm.Navigation.openErrorDialog({errorCode:err.errorCode,message:errorMessage});getFileDetail&&Xrm.Reporting.reportFailure("Import.SDKExecuteError",err,"",[{name:"SdkName",value:sdkName},{name:"Error",value:err.innerror.message},{name:"EntityLogicalName",value:fileParams[2]},{name:"ImportId",value:fileParams[0]},{name:"ImportType",value:fileParams[1]}])})}function sdkExecuteMultiple(sdkRequest,getFileDetail){return Xrm.WebApi.online.executeMultiple(sdkRequest).then(function(responses){if(responses)return Promise.all(responses.map(function(r){return r.json()}))},function(err){throw err})}function retrieveImportFileInfo(entityTypeName,records,callback){for(var BulkDeleteList=[],i=0;i<records.length;i++)BulkDeleteList[i]=Xrm.WebApi.retrieveRecord("importfile",records[i].Id,"?$select=importfileid,targetentityname&$expand=importid($select=importid, sequence)");return Promise.all(BulkDeleteList).then(function(response){console.log(response);callback(response)})}function deleteImportLogData(callback,deleteHistory,recordCount){var confirmDialogOptions={height:220,width:600},deleteHistroyText="";if(recordCount>1)deleteHistroyText=deleteHistory?Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_DeleteImportLogsWithHistoryMultipleFiles"):Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_DeleteImportLogsDataMultipleFiles");else deleteHistroyText=deleteHistory?Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_DeleteImportLogsWithHistory"):Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_DeleteImportLogsData");var confirmDialogStrings={title:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_DeleteImportLogsDialogTitle"),text:deleteHistroyText,confirmButtonLabel:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_Confirm"),cancelButtonLabel:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_Cancel")};Xrm.Navigation.openConfirmDialog(confirmDialogStrings,confirmDialogOptions).then(function(response){if(response.confirmed){var msg=deleteHistroyText;callback()}else return})}function deleteAllImportLogRecordsAndHistoryForCurrenImport(gridControl,records,entityTypeName){deleteImportLogData(function(){deleteAllImportLogRecordsForCurrentImport(gridControl,records,entityTypeName,true)},true,records.length)}function deleteOnlyImportLogRecordsForCurrenImport(gridControl,records,entityTypeName){deleteImportLogData(function(){deleteAllImportLogRecordsForCurrentImport(gridControl,records,entityTypeName,false)},false,records.length)}function deleteAllImportLogRecordsAndHistoryForCurrenImportFromForm(){var records=[];records[0]={Id:Xrm.Page.data.entity.getId()};var entityTypeName=Xrm.Page.data.entity.getEntityName();deleteImportLogData(function(){deleteImportLogRecordsData(entityTypeName,true,records)},false,records.length)}function deleteOnlyImportLogRecordsForCurrenImportFromForm(){var records=[];records[0]={Id:Xrm.Page.data.entity.getId()};var entityTypeName=Xrm.Page.data.entity.getEntityName();deleteImportLogData(function(){deleteImportLogRecordsData(entityTypeName,false,records)},false,records.length)}function deleteAllImportLogRecordsForCurrentImport(gridControl,records,entityTypeName,deleteHistory){if(entityTypeName==4412)entityTypeName="importfile";else return;if(records.length<=0){var alert={text:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_NoRecordSelected")};Xrm.Navigation.openAlertDialog(alert);return}deleteImportLogRecordsData(entityTypeName,deleteHistory,records,gridControl)}function deleteImportLogRecordsData(entityTypeName,deleteHistory,records,gridControl){var result=retrieveImportFileInfo(entityTypeName,records,function(response){for(var bulkdeleteRequesObjects=[],i=0;i<response.length;i++){var targetPlatformName=response[i].targetentityname,emptyGuid="00000000-0000-0000-0000-000000000000";bulkdeleteRequesObjects[i]=GetBulkDeleteImportedRecord(targetPlatformName,response[i].importid.sequence,response[i].importid.importid,deleteHistory,getImportLogDeleteJobName(),false,emptyGuid,emptyGuid,"",response[i].importid.importid)}sdkExecuteMultipleHelper(bulkdeleteRequesObjects,function(res){console.log(res);for(var errorCount=0,errorObject,i=0;i<res.length;i++)if(res[i].error!=undefined){errorCount++;errorObject=res[i].error;if(errorCount>1){Xrm.Navigation.openAlertDialog({text:Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_MultipleDeleteFailures")});return false}}if(errorCount==1){Xrm.Navigation.openErrorDialog({message:errorObject.code,errorCode:errorObject.message});return false}gridControl&&gridControl.refresh()},"BulkDeleteImportedRecords",false)})}function getImportLogDeleteJobName(){var currentdate=new Date,datetime=currentdate.getDate().toString()+(currentdate.getMonth()+1).toString()+currentdate.getFullYear().toString()+currentdate.getHours().toString()+currentdate.getMinutes().toString()+currentdate.getSeconds().toString();return Xrm.Utility.getResourceString("ImportExport_library","ImportExport_Label_BulkDeletion")+datetime}function hasImportCompleted(){return Xrm.Page.data.entity.attributes.get("statuscode").getValue().toString()=="4"?true:false}function GetBulkDeleteImportedRecord(targetEntityName,importSequenceNumber,importId,deleteImportHistory,jobName,sendEmailNotification,toRecipients,ccRecipients,recurrencePattern,sourceImportId){function GetBulkDeleteImportedRecordsRequest(targetEntityName,importSequenceNumber,importId,deleteImportHistory,jobName,sendEmailNotification,toRecipients,ccRecipients,recurrencePattern,sourceImportId){this.TargetEntityName=targetEntityName;this.ImportSequenceNumber=importSequenceNumber;this.ImportId=importId;this.DeleteImportHistory=deleteImportHistory;this.JobName=jobName;this.SendEmailNotification=sendEmailNotification;this.ToRecipients=toRecipients;this.CCRecipients=ccRecipients;this.RecurrencePattern=recurrencePattern;this.SourceImportId=sourceImportId;GetBulkDeleteImportedRecordsRequest.prototype.getMetadata=function(){return {boundParameter:null,parameterTypes:{TargetEntityName:{typeName:"Edm.String",structuralProperty:1},ImportSequenceNumber:{typeName:"Edm.Int32",structuralProperty:1},ImportId:{typeName:"Edm.String",structuralProperty:1},DeleteImportHistory:{typeName:"Edm.Boolean",structuralProperty:1},JobName:{typeName:"Edm.String",structuralProperty:1},SendEmailNotification:{typeName:"Edm.Boolean",structuralProperty:1},ToRecipients:{typeName:"Edm.String",structuralProperty:1},CCRecipients:{typeName:"Edm.String",structuralProperty:1},RecurrencePattern:{typeName:"Edm.String",structuralProperty:1},SourceImportId:{typeName:"Edm.String",structuralProperty:1}},operationType:0,operationName:"BulkDeleteImportedRecords"}}}var getDeleteImportedRecordsRequest=new GetBulkDeleteImportedRecordsRequest(targetEntityName,importSequenceNumber,importId,deleteImportHistory,jobName,sendEmailNotification,toRecipients,ccRecipients,recurrencePattern,sourceImportId);return getDeleteImportedRecordsRequest}